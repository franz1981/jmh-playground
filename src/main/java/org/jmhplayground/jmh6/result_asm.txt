# JMH version: 1.37/IdeaProjects/jmh-playground/src/main/java/org/jmhplayground/jmh6$ java -jar ../../../../../../target/benchmark.jar -psame=false -pshuffle=false,true -prof perfnorm -prof perfasm org.jmhplayground.jmh6.BranchPrediction.*
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.hashSet
# Parameters: (same = false, shuffle = false)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.508 ns/op
# Warmup Iteration   2: 5.943 ns/op
# Warmup Iteration   3: 6.279 ns/op
# Warmup Iteration   4: 5.902 ns/op
# Warmup Iteration   5: 5.898 ns/op
# Warmup Iteration   6: 5.890 ns/op
# Warmup Iteration   7: 5.891 ns/op
# Warmup Iteration   8: 5.911 ns/op
# Warmup Iteration   9: 5.895 ns/op
# Warmup Iteration  10: 6.154 ns/op
Iteration   1: 5.923 ns/op
Iteration   2: 5.907 ns/op
Iteration   3: 5.891 ns/op
Iteration   4: 5.893 ns/op
Iteration   5: 5.889 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 8.33% complete, ETA 00:01:41
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.213 ns/op
# Warmup Iteration   2: 6.489 ns/op
# Warmup Iteration   3: 6.777 ns/op
# Warmup Iteration   4: 6.426 ns/op
# Warmup Iteration   5: 6.412 ns/op
# Warmup Iteration   6: 6.761 ns/op
# Warmup Iteration   7: 6.403 ns/op
# Warmup Iteration   8: 6.409 ns/op
# Warmup Iteration   9: 6.413 ns/op
# Warmup Iteration  10: 6.454 ns/op
Iteration   1: 6.431 ns/op
Iteration   2: 6.477 ns/op
Iteration   3: 6.472 ns/op
Iteration   4: 6.514 ns/op
Iteration   5: 6.481 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.hashSet":
  6.188 ±(99.9%) 0.459 ns/op [Average]
  (min, avg, max) = (5.889, 6.188, 6.514), stdev = 0.303
  CI (99.9%): [5.729, 6.647] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:CPI":
  0.246 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:IPC":
  4.071 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-load-misses":
  0.022 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-loads":
  36.035 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-stores":
  4.149 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-icache-load-misses":
  0.013 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-loads":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-stores":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:asm":
PrintAssembly processed: 201373 total address lines.
Perf output processed (skipped 6.396 seconds):
 Column 1: cycles (227 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801

            0x00007f40e85df4a1:   mov    0x8(%rsp),%rcx
            0x00007f40e85df4a6:   mov    0x10(%rsp),%r8               ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@58 (line 2373)
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df4ab:   mov    %eax,%r10d
            0x00007f40e85df4ae:   shr    $0x10,%r10d
   0.88%    0x00007f40e85df4b2:   xor    %eax,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@18 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df4b5:   and    %r10d,%r9d
            0x00007f40e85df4b8:   mov    0x10(%rcx,%r9,4),%r9d        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@30 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.08%    0x00007f40e85df4bd:   mov    0xc(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007f40e85df7a8
  10.57%    0x00007f40e85df4c2:   cmp    %r10d,%ecx
            0x00007f40e85df4c5:   jne    0x00007f40e85df618           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@42 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.96%    0x00007f40e85df4cb:   mov    0x10(%r12,%r9,8),%ecx        ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@46 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df4d0:   cmp    %r11d,%ecx
            0x00007f40e85df4d3:   je     0x00007f40e85df5f6           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@53 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.44%    0x00007f40e85df4d9:   cmp    %ecx,%r11d
            0x00007f40e85df4dc:   je     0x00007f40e85df5f6           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@2 (line 1858)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.76%    0x00007f40e85df4e2:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f40e85df854
   8.81%    0x00007f40e85df4e7:   cmp    $0xe8d8,%r8d                 ;   {metadata(&apos;java/lang/String&apos;)}
            0x00007f40e85df4ee:   jne    0x00007f40e85df7e4           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.44%    0x00007f40e85df4f4:   movsbl 0x10(%r12,%r11,8),%ebx       ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@26 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df4fa:   lea    (%r12,%rcx,8),%r8            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.32%    0x00007f40e85df4fe:   movsbl 0x10(%r8),%edi               ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@30 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df503:   cmp    %edi,%ebx
            0x00007f40e85df505:   jne    0x00007f40e85df738           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@33 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.64%    0x00007f40e85df50b:   mov    0x14(%r8),%ebx               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f40e85df50f:   mov    0x14(%r12,%r11,8),%r8d       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.44%    0x00007f40e85df514:   mov    0xc(%r12,%rbx,8),%edx
  11.89%    0x00007f40e85df519:   mov    0xc(%r12,%r8,8),%ecx
            0x00007f40e85df51e:   cmp    %edx,%ecx
            0x00007f40e85df520:   jne    0x00007f40e85df6f0           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@44 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.20%    0x00007f40e85df526:   lea    (%r12,%rbx,8),%rdi           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
....................................................................................................
  48.46%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801

                       0x00007f40e85df572:   add    $0x20,%rcx
                       0x00007f40e85df576:   jne    0x00007f40e85df559
                       0x00007f40e85df578:   test   %eax,%eax
          ╭            0x00007f40e85df57a:   je     0x00007f40e85df5dd
          │            0x00007f40e85df580:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │            0x00007f40e85df586:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │            0x00007f40e85df58c:   vpxor  %ymm1,%ymm0,%ymm0
          │            0x00007f40e85df590:   vptest %ymm0,%ymm0
          │╭           0x00007f40e85df595:   jne    0x00007f40e85df5e4
          ││╭          0x00007f40e85df597:   jmp    0x00007f40e85df5dd
   2.64%  │││          0x00007f40e85df599:   mov    %eax,%ecx
          │││          0x00007f40e85df59b:   and    $0xfffffffc,%ecx
          │││╭         0x00007f40e85df59e:   je     0x00007f40e85df5b9
          ││││         0x00007f40e85df5a0:   lea    (%rdi,%rcx,1),%rdi
          ││││         0x00007f40e85df5a4:   lea    (%rsi,%rcx,1),%rsi
   2.64%  ││││         0x00007f40e85df5a8:   neg    %rcx
          ││││ ↗       0x00007f40e85df5ab:   mov    (%rdi,%rcx,1),%ebx
          ││││ │       0x00007f40e85df5ae:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│       0x00007f40e85df5b1:   jne    0x00007f40e85df5e4
   4.41%  ││││││       0x00007f40e85df5b3:   add    $0x4,%rcx
          │││││╰       0x00007f40e85df5b7:   jne    0x00007f40e85df5ab
          │││↘│        0x00007f40e85df5b9:   test   $0x2,%al
          │││ │ ╭      0x00007f40e85df5bb:   je     0x00007f40e85df5cf
          │││ │ │      0x00007f40e85df5bd:   movzwl (%rdi),%ebx
          │││ │ │      0x00007f40e85df5c0:   movzwl (%rsi),%ecx
   0.88%  │││ │ │      0x00007f40e85df5c3:   cmp    %ecx,%ebx
          │││ │ │╭     0x00007f40e85df5c5:   jne    0x00007f40e85df5e4
          │││ │ ││     0x00007f40e85df5c7:   lea    0x2(%rdi),%rdi
          │││ │ ││     0x00007f40e85df5cb:   lea    0x2(%rsi),%rsi
          │││ │ ↘│     0x00007f40e85df5cf:   test   $0x1,%al
          │││ │  │╭    0x00007f40e85df5d1:   je     0x00007f40e85df5dd
   1.32%  │││ │  ││    0x00007f40e85df5d3:   movzbl (%rdi),%ebx
   0.44%  │││ │  ││    0x00007f40e85df5d6:   movzbl (%rsi),%ecx
          │││ │  ││    0x00007f40e85df5d9:   cmp    %ecx,%ebx
          │││ │  ││╭   0x00007f40e85df5db:   jne    0x00007f40e85df5e4
          ↘│↘ │  │↘│   0x00007f40e85df5dd:   mov    $0x1,%eax
           │  │  │ │╭  0x00007f40e85df5e2:   jmp    0x00007f40e85df5e6
           ↘  ↘  ↘ ↘│  0x00007f40e85df5e4:   xor    %eax,%eax
   0.44%            ↘  0x00007f40e85df5e6:   vpxor  %ymm0,%ymm0,%ymm0            ;   {no_reloc}
                       0x00007f40e85df5ea:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.lang.String::equals@44 (line 1863)
                                                                                 ; - java.util.HashMap::getNode@63 (line 578)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007f40e85df5ee:   test   %eax,%eax
                       0x00007f40e85df5f0:   je     0x00007f40e85df6f5           ;*synchronization entry
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
   0.88%               0x00007f40e85df5f6:   mov    $0x1,%eax
   1.76%               0x00007f40e85df5fb:   vzeroupper
                       0x00007f40e85df5fe:   add    $0x30,%rsp
                       0x00007f40e85df602:   pop    %rbp
   0.88%               0x00007f40e85df603:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       0x00007f40e85df60a:   ja     0x00007f40e85df8b5
   3.96%               0x00007f40e85df610:   ret
                       0x00007f40e85df611:   xor    %eax,%eax
                       0x00007f40e85df613:   jmp    0x00007f40e85df4ab
                       0x00007f40e85df618:   mov    0x18(%r12,%r9,8),%ecx        ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@72 (line 580)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007f40e85df61d:   test   %ecx,%ecx
                       0x00007f40e85df61f:   je     0x00007f40e85df7a8           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@78 (line 580)
....................................................................................................
  20.26%  <total for region 2>

....[Hottest Regions]...............................................................................
  48.46%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
  20.26%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   9.69%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   5.29%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 826
   3.96%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   3.08%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   2.20%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   2.20%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 826
   0.88%   [kernel.kallsyms]  native_write_msr
   0.88%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.44%   [kernel.kallsyms]  pipe_write
   0.44%   [kernel.kallsyms]  mutex_unlock
   0.44%   [kernel.kallsyms]  entry_SYSCALL_64
   0.44%           libjvm.so  CodeCache::find_blob(void*)
   0.44%           libc.so.6  _IO_fwrite
   0.44%           libc.so.6  __GI___pthread_disable_asynccancel
....................................................................................................
  99.56%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  87.67%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 801
   7.49%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 826
   0.88%   [kernel.kallsyms]  native_write_msr
   0.88%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.44%   [kernel.kallsyms]  pipe_write
   0.44%           libc.so.6  __GI___pthread_disable_asynccancel
   0.44%   [kernel.kallsyms]  entry_SYSCALL_64
   0.44%           libc.so.6  _IO_fwrite
   0.44%   [kernel.kallsyms]  mutex_unlock
   0.44%           libjvm.so  CodeCache::find_blob(void*)
....................................................................................................
  99.56%  <totals>

....[Distribution by Source]........................................................................
  95.15%         c2, level 4
   2.20%   [kernel.kallsyms]
   1.32%           libjvm.so
   0.88%           libc.so.6
....................................................................................................
  99.56%  <totals>

WARNING: The perf event count is suspiciously low (227). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 202078 total address lines.
Perf output processed (skipped 6.356 seconds):
 Column 1: cycles (345 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805

            0x00007f18445dee21:   mov    0x8(%rsp),%rcx
            0x00007f18445dee26:   mov    0x10(%rsp),%r8               ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@58 (line 2373)
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f18445dee2b:   mov    %eax,%r10d
            0x00007f18445dee2e:   shr    $0x10,%r10d
   1.16%    0x00007f18445dee32:   xor    %eax,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@18 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f18445dee35:   and    %r10d,%r9d
            0x00007f18445dee38:   mov    0x10(%rcx,%r9,4),%r9d        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@30 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.45%    0x00007f18445dee3d:   mov    0xc(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007f18445df128
   8.70%    0x00007f18445dee42:   cmp    %r10d,%ecx
            0x00007f18445dee45:   jne    0x00007f18445def98           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@42 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.19%    0x00007f18445dee4b:   mov    0x10(%r12,%r9,8),%ecx        ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@46 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.16%    0x00007f18445dee50:   cmp    %r11d,%ecx
            0x00007f18445dee53:   je     0x00007f18445def76           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@53 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.87%    0x00007f18445dee59:   cmp    %ecx,%r11d
            0x00007f18445dee5c:   je     0x00007f18445def76           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@2 (line 1858)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.03%    0x00007f18445dee62:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f18445df1d4
  10.14%    0x00007f18445dee67:   cmp    $0xe8d8,%r8d                 ;   {metadata(&apos;java/lang/String&apos;)}
            0x00007f18445dee6e:   jne    0x00007f18445df164           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.03%    0x00007f18445dee74:   movsbl 0x10(%r12,%r11,8),%ebx       ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@26 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f18445dee7a:   lea    (%r12,%rcx,8),%r8            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f18445dee7e:   movsbl 0x10(%r8),%edi               ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@30 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f18445dee83:   cmp    %edi,%ebx
            0x00007f18445dee85:   jne    0x00007f18445df0b8           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@33 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.19%    0x00007f18445dee8b:   mov    0x14(%r8),%ebx               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.29%    0x00007f18445dee8f:   mov    0x14(%r12,%r11,8),%r8d       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.29%    0x00007f18445dee94:   mov    0xc(%r12,%rbx,8),%edx
  13.91%    0x00007f18445dee99:   mov    0xc(%r12,%r8,8),%ecx
            0x00007f18445dee9e:   cmp    %edx,%ecx
            0x00007f18445deea0:   jne    0x00007f18445df070           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@44 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   4.93%    0x00007f18445deea6:   lea    (%r12,%rbx,8),%rdi           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.29%    0x00007f18445deeaa:   lea    0x10(%r12,%rbx,8),%rsi
            0x00007f18445deeaf:   lea    (%r12,%r8,8),%rbx            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
....................................................................................................
  53.62%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805

                       0x00007f18445deef2:   add    $0x20,%rcx
                       0x00007f18445deef6:   jne    0x00007f18445deed9
                       0x00007f18445deef8:   test   %eax,%eax
          ╭            0x00007f18445deefa:   je     0x00007f18445def5d
          │            0x00007f18445def00:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │            0x00007f18445def06:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │            0x00007f18445def0c:   vpxor  %ymm1,%ymm0,%ymm0
          │            0x00007f18445def10:   vptest %ymm0,%ymm0
          │╭           0x00007f18445def15:   jne    0x00007f18445def64
          ││╭          0x00007f18445def17:   jmp    0x00007f18445def5d
   4.06%  │││          0x00007f18445def19:   mov    %eax,%ecx
          │││          0x00007f18445def1b:   and    $0xfffffffc,%ecx
          │││╭         0x00007f18445def1e:   je     0x00007f18445def39
          ││││         0x00007f18445def20:   lea    (%rdi,%rcx,1),%rdi
          ││││         0x00007f18445def24:   lea    (%rsi,%rcx,1),%rsi
   1.16%  ││││         0x00007f18445def28:   neg    %rcx
          ││││ ↗       0x00007f18445def2b:   mov    (%rdi,%rcx,1),%ebx
          ││││ │       0x00007f18445def2e:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│       0x00007f18445def31:   jne    0x00007f18445def64
   4.06%  ││││││       0x00007f18445def33:   add    $0x4,%rcx
          │││││╰       0x00007f18445def37:   jne    0x00007f18445def2b
          │││↘│        0x00007f18445def39:   test   $0x2,%al
          │││ │ ╭      0x00007f18445def3b:   je     0x00007f18445def4f
          │││ │ │      0x00007f18445def3d:   movzwl (%rdi),%ebx
          │││ │ │      0x00007f18445def40:   movzwl (%rsi),%ecx
   0.87%  │││ │ │      0x00007f18445def43:   cmp    %ecx,%ebx
          │││ │ │╭     0x00007f18445def45:   jne    0x00007f18445def64
          │││ │ ││     0x00007f18445def47:   lea    0x2(%rdi),%rdi
          │││ │ ││     0x00007f18445def4b:   lea    0x2(%rsi),%rsi
          │││ │ ↘│     0x00007f18445def4f:   test   $0x1,%al
          │││ │  │╭    0x00007f18445def51:   je     0x00007f18445def5d
   0.87%  │││ │  ││    0x00007f18445def53:   movzbl (%rdi),%ebx
   1.16%  │││ │  ││    0x00007f18445def56:   movzbl (%rsi),%ecx
          │││ │  ││    0x00007f18445def59:   cmp    %ecx,%ebx
          │││ │  ││╭   0x00007f18445def5b:   jne    0x00007f18445def64
          ↘│↘ │  │↘│   0x00007f18445def5d:   mov    $0x1,%eax
           │  │  │ │╭  0x00007f18445def62:   jmp    0x00007f18445def66
           ↘  ↘  ↘ ↘│  0x00007f18445def64:   xor    %eax,%eax
                    ↘  0x00007f18445def66:   vpxor  %ymm0,%ymm0,%ymm0            ;   {no_reloc}
                       0x00007f18445def6a:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.lang.String::equals@44 (line 1863)
                                                                                 ; - java.util.HashMap::getNode@63 (line 578)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.87%               0x00007f18445def6e:   test   %eax,%eax
                       0x00007f18445def70:   je     0x00007f18445df075           ;*synchronization entry
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
   0.29%               0x00007f18445def76:   mov    $0x1,%eax
   2.32%               0x00007f18445def7b:   vzeroupper
   0.58%               0x00007f18445def7e:   add    $0x30,%rsp
                       0x00007f18445def82:   pop    %rbp
   1.74%               0x00007f18445def83:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       0x00007f18445def8a:   ja     0x00007f18445df235
   2.90%               0x00007f18445def90:   ret
                       0x00007f18445def91:   xor    %eax,%eax
                       0x00007f18445def93:   jmp    0x00007f18445dee2b
                       0x00007f18445def98:   mov    0x18(%r12,%r9,8),%ecx        ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@72 (line 580)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007f18445def9d:   test   %ecx,%ecx
                       0x00007f18445def9f:   je     0x00007f18445df128           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@78 (line 580)
....................................................................................................
  20.87%  <total for region 2>

....[Hottest Regions]...............................................................................
  53.62%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
  20.87%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
   9.57%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
   6.38%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
   3.19%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 827
   2.90%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
   1.16%   [kernel.kallsyms]  native_write_msr
   0.29%   [kernel.kallsyms]  fput
   0.29%   [kernel.kallsyms]  pipe_write
   0.29%   [kernel.kallsyms]  xas_load
   0.29%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.29%      hsdis-amd64.so  print_insn
   0.29%           libjvm.so  Assembler::jccb_0(Assembler::Condition, Label&, char const*, int)
   0.29%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
....................................................................................................
  99.71%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  93.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 805
   3.19%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 827
   1.16%   [kernel.kallsyms]  native_write_msr
   0.29%      hsdis-amd64.so  print_insn
   0.29%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.29%           libjvm.so  Assembler::jccb_0(Assembler::Condition, Label&, char const*, int)
   0.29%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.29%   [kernel.kallsyms]  pipe_write
   0.29%   [kernel.kallsyms]  xas_load
   0.29%   [kernel.kallsyms]  fput
....................................................................................................
  99.71%  <totals>

....[Distribution by Source]........................................................................
  96.52%         c2, level 4
   2.32%   [kernel.kallsyms]
   0.58%           libjvm.so
   0.29%      hsdis-amd64.so
....................................................................................................
  99.71%  <totals>

WARNING: The perf event count is suspiciously low (345). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:branch-misses":
  0.002 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:branches":
  26.488 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:cycles":
  30.178 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-loads":
  35.971 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-stores":
  4.156 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:iTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:instructions":
  122.489 #/op


# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.hashSet
# Parameters: (same = false, shuffle = true)

# Run progress: 16.67% complete, ETA 00:01:39
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 12.168 ns/op
# Warmup Iteration   2: 11.374 ns/op
# Warmup Iteration   3: 11.600 ns/op
# Warmup Iteration   4: 11.329 ns/op
# Warmup Iteration   5: 11.283 ns/op
# Warmup Iteration   6: 11.260 ns/op
# Warmup Iteration   7: 11.252 ns/op
# Warmup Iteration   8: 11.256 ns/op
# Warmup Iteration   9: 11.285 ns/op
# Warmup Iteration  10: 11.252 ns/op
Iteration   1: 11.232 ns/op
Iteration   2: 11.232 ns/op
Iteration   3: 11.237 ns/op
Iteration   4: 11.238 ns/op
Iteration   5: 11.326 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 25.00% complete, ETA 00:01:31
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 12.668 ns/op
# Warmup Iteration   2: 11.512 ns/op
# Warmup Iteration   3: 12.246 ns/op
# Warmup Iteration   4: 11.411 ns/op
# Warmup Iteration   5: 11.363 ns/op
# Warmup Iteration   6: 11.373 ns/op
# Warmup Iteration   7: 11.473 ns/op
# Warmup Iteration   8: 11.385 ns/op
# Warmup Iteration   9: 11.458 ns/op
# Warmup Iteration  10: 11.482 ns/op
Iteration   1: 11.637 ns/op
Iteration   2: 11.374 ns/op
Iteration   3: 11.484 ns/op
Iteration   4: 11.360 ns/op
Iteration   5: 11.655 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.hashSet":
  11.377 ±(99.9%) 0.247 ns/op [Average]
  (min, avg, max) = (11.232, 11.377, 11.655), stdev = 0.163
  CI (99.9%): [11.130, 11.624] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:CPI":
  0.451 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:IPC":
  2.219 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-load-misses":
  0.029 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-loads":
  36.436 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-dcache-stores":
  4.393 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:L1-icache-load-misses":
  0.036 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-load-misses":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-loads":
  0.003 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:LLC-stores":
  0.003 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:asm":
PrintAssembly processed: 200532 total address lines.
Perf output processed (skipped 6.870 seconds):
 Column 1: cycles (97 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804

                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e082b:   mov    %eax,%r10d
            0x00007f9e405e082e:   shr    $0x10,%r10d
            0x00007f9e405e0832:   xor    %eax,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@18 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.09%    0x00007f9e405e0835:   and    %r10d,%r9d
   1.03%    0x00007f9e405e0838:   mov    0x10(%rcx,%r9,4),%r9d        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@30 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   3.09%    0x00007f9e405e083d:   mov    0xc(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007f9e405e0ae8
   3.09%    0x00007f9e405e0842:   cmp    %r10d,%ecx
            0x00007f9e405e0845:   jne    0x00007f9e405e0991           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@42 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e084b:   mov    0x10(%r12,%r9,8),%ecx        ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@46 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e0850:   cmp    %r11d,%ecx
            0x00007f9e405e0853:   je     0x00007f9e405e0976           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@53 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e0859:   cmp    %ecx,%r11d
            0x00007f9e405e085c:   je     0x00007f9e405e0976           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@2 (line 1858)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.06%    0x00007f9e405e0862:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f9e405e0bd8
   2.06%    0x00007f9e405e0867:   cmp    $0xe8d8,%r8d                 ;   {metadata(&apos;java/lang/String&apos;)}
            0x00007f9e405e086e:   jne    0x00007f9e405e0b68           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.06%    0x00007f9e405e0874:   movsbl 0x10(%r12,%r11,8),%ebx       ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@26 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e087a:   lea    (%r12,%rcx,8),%r8            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.03%    0x00007f9e405e087e:   movsbl 0x10(%r8),%edi               ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@30 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e0883:   cmp    %edi,%ebx
            0x00007f9e405e0885:   jne    0x00007f9e405e0abc           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@33 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.03%    0x00007f9e405e088b:   mov    0x14(%r8),%ebx               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e088f:   mov    0x14(%r12,%r11,8),%r8d       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e0894:   mov    0xc(%r12,%rbx,8),%edx
   4.12%    0x00007f9e405e0899:   mov    0xc(%r12,%r8,8),%ecx
            0x00007f9e405e089e:   cmp    %edx,%ecx
            0x00007f9e405e08a0:   jne    0x00007f9e405e0a74           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@44 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   4.12%    0x00007f9e405e08a6:   lea    (%r12,%rbx,8),%rdi           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
....................................................................................................
  26.80%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804

            # {method} {0x00007f9dbc4796a8} &apos;hashSet&apos; &apos;()Z&apos; in &apos;org/jmhplayground/jmh6/BranchPrediction&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f9e405e0700:   mov    0x8(%rsi),%r10d
            0x00007f9e405e0704:   movabs $0x7f9dc7000000,%r11
            0x00007f9e405e070e:   add    %r11,%r10
            0x00007f9e405e0711:   cmp    %r10,%rax
            0x00007f9e405e0714:   jne    0x00007f9e3fead280           ;   {runtime_call ic_miss_stub}
            0x00007f9e405e071a:   xchg   %ax,%ax
            0x00007f9e405e071c:   nopl   0x0(%rax)
          [Verified Entry Point]
   3.09%    0x00007f9e405e0720:   mov    %eax,-0x14000(%rsp)
            0x00007f9e405e0727:   push   %rbp
            0x00007f9e405e0728:   sub    $0x30,%rsp
            0x00007f9e405e072c:   cmpl   $0x1,0x20(%r15)
            0x00007f9e405e0734:   jne    0x00007f9e405e0c4f           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
            0x00007f9e405e073a:   mov    0x1c(%rsi),%r11d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   1.03%    0x00007f9e405e073e:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007f9e405e0b90
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   2.06%    0x00007f9e405e0743:   mov    0x10(%rsi),%r8               ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007f9e405e0747:   movslq %r10d,%r9
   1.03%    0x00007f9e405e074a:   dec    %r9
            0x00007f9e405e074d:   and    %r8,%r9
   3.09%    0x00007f9e405e0750:   mov    %r9d,%ecx                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007f9e405e0753:   cmp    %r10d,%ecx
            0x00007f9e405e0756:   jae    0x00007f9e405e0a38
   2.06%    0x00007f9e405e075c:   mov    0x18(%rsi),%r10d             ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   1.03%    0x00007f9e405e0760:   shl    $0x3,%r11
            0x00007f9e405e0764:   movsbl 0x10(%r11,%rcx,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   2.06%    0x00007f9e405e076a:   add    $0x1,%r8
            0x00007f9e405e076e:   mov    %r8,0x10(%rsi)               ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007f9e405e0772:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f9e405e0ba8
            0x00007f9e405e0777:   cmp    %r8d,%r9d
            0x00007f9e405e077a:   jae    0x00007f9e405e0a58
   1.03%    0x00007f9e405e0780:   shl    $0x3,%r10
            0x00007f9e405e0784:   mov    0x10(%r10,%r9,4),%r11d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   3.09%    0x00007f9e405e0789:   movabs $0x45525f438,%r10            ;   {oop(a &apos;java/util/HashSet&apos;{0x000000045525f438})}
            0x00007f9e405e0793:   mov    0xc(%r10),%r10d              ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashSet::contains@1 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007f9e405e0797:   mov    0x24(%r12,%r10,8),%r10d      ; implicit exception: dispatches to 0x00007f9e405e0bc0
                                                                      ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@1 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
....................................................................................................
  19.59%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804

                       0x00007f9e405e08f2:   add    $0x20,%rcx
                       0x00007f9e405e08f6:   jne    0x00007f9e405e08d9
                       0x00007f9e405e08f8:   test   %eax,%eax
          ╭            0x00007f9e405e08fa:   je     0x00007f9e405e095d
          │            0x00007f9e405e0900:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │            0x00007f9e405e0906:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │            0x00007f9e405e090c:   vpxor  %ymm1,%ymm0,%ymm0
          │            0x00007f9e405e0910:   vptest %ymm0,%ymm0
          │╭           0x00007f9e405e0915:   jne    0x00007f9e405e0964
          ││╭          0x00007f9e405e0917:   jmp    0x00007f9e405e095d
   1.03%  │││          0x00007f9e405e0919:   mov    %eax,%ecx
          │││          0x00007f9e405e091b:   and    $0xfffffffc,%ecx
          │││╭         0x00007f9e405e091e:   je     0x00007f9e405e0939
          ││││         0x00007f9e405e0920:   lea    (%rdi,%rcx,1),%rdi
          ││││         0x00007f9e405e0924:   lea    (%rsi,%rcx,1),%rsi
          ││││         0x00007f9e405e0928:   neg    %rcx
   1.03%  ││││ ↗       0x00007f9e405e092b:   mov    (%rdi,%rcx,1),%ebx
          ││││ │       0x00007f9e405e092e:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│       0x00007f9e405e0931:   jne    0x00007f9e405e0964
   2.06%  ││││││       0x00007f9e405e0933:   add    $0x4,%rcx
          │││││╰       0x00007f9e405e0937:   jne    0x00007f9e405e092b
   1.03%  │││↘│        0x00007f9e405e0939:   test   $0x2,%al
          │││ │ ╭      0x00007f9e405e093b:   je     0x00007f9e405e094f
   1.03%  │││ │ │      0x00007f9e405e093d:   movzwl (%rdi),%ebx
   2.06%  │││ │ │      0x00007f9e405e0940:   movzwl (%rsi),%ecx
   2.06%  │││ │ │      0x00007f9e405e0943:   cmp    %ecx,%ebx
          │││ │ │╭     0x00007f9e405e0945:   jne    0x00007f9e405e0964
   1.03%  │││ │ ││     0x00007f9e405e0947:   lea    0x2(%rdi),%rdi
          │││ │ ││     0x00007f9e405e094b:   lea    0x2(%rsi),%rsi
          │││ │ ↘│     0x00007f9e405e094f:   test   $0x1,%al
          │││ │  │╭    0x00007f9e405e0951:   je     0x00007f9e405e095d
   3.09%  │││ │  ││    0x00007f9e405e0953:   movzbl (%rdi),%ebx
          │││ │  ││    0x00007f9e405e0956:   movzbl (%rsi),%ecx
          │││ │  ││    0x00007f9e405e0959:   cmp    %ecx,%ebx
          │││ │  ││╭   0x00007f9e405e095b:   jne    0x00007f9e405e0964
          ↘│↘ │  │↘│   0x00007f9e405e095d:   mov    $0x1,%eax
   1.03%   │  │  │ │╭  0x00007f9e405e0962:   jmp    0x00007f9e405e0966
           ↘  ↘  ↘ ↘│  0x00007f9e405e0964:   xor    %eax,%eax
                    ↘  0x00007f9e405e0966:   vpxor  %ymm0,%ymm0,%ymm0            ;   {no_reloc}
                       0x00007f9e405e096a:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.lang.String::equals@44 (line 1863)
                                                                                 ; - java.util.HashMap::getNode@63 (line 578)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007f9e405e096e:   test   %eax,%eax
                       0x00007f9e405e0970:   je     0x00007f9e405e0a79           ;*synchronization entry
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
   1.03%               0x00007f9e405e0976:   mov    $0x1,%eax
                       0x00007f9e405e097b:   vzeroupper
                       0x00007f9e405e097e:   add    $0x30,%rsp
                       0x00007f9e405e0982:   pop    %rbp
   1.03%               0x00007f9e405e0983:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       0x00007f9e405e098a:   ja     0x00007f9e405e0c39
                       0x00007f9e405e0990:   ret
                       0x00007f9e405e0991:   mov    0x18(%r12,%r9,8),%ecx        ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@72 (line 580)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007f9e405e0996:   test   %ecx,%ecx
                       0x00007f9e405e0998:   je     0x00007f9e405e0ae8           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@78 (line 580)
....................................................................................................
  17.53%  <total for region 3>

....[Hottest Regions]...............................................................................
  26.80%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804
  19.59%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804
  17.53%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804
   9.28%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 832
   6.19%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804
   3.09%   [kernel.kallsyms]  native_write_msr
   2.06%   [kernel.kallsyms]  filemap_get_entry
   1.03%   [kernel.kallsyms]  try_to_wake_up
   1.03%   [kernel.kallsyms]  update_cfs_group
   1.03%   [kernel.kallsyms]  pipe_write
   1.03%   [kernel.kallsyms]  _copy_from_iter
   1.03%   [kernel.kallsyms]  _copy_to_iter
   1.03%   [kernel.kallsyms]  mutex_unlock
   1.03%   [kernel.kallsyms]  clear_bhb_loop
   1.03%         interpreter  invokestatic  184 invokestatic
   1.03%         interpreter  nofast_getfield  234 nofast_getfield
   1.03%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   1.03%                      <unknown>
   1.03%           libc.so.6  __printf_buffer
   1.03%           libc.so.6  __GI___pthread_disable_asynccancel
   1.03%  <...other 1 warm regions...>
....................................................................................................
  98.97%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  70.10%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 804
   9.28%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 832
   3.09%   [kernel.kallsyms]  native_write_msr
   2.06%   [kernel.kallsyms]  filemap_get_entry
   1.03%           libc.so.6  __printf_buffer
   1.03%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   1.03%           libc.so.6  __GI___libc_write
   1.03%   [kernel.kallsyms]  try_to_wake_up
   1.03%   [kernel.kallsyms]  update_cfs_group
   1.03%   [kernel.kallsyms]  mutex_unlock
   1.03%         interpreter  nofast_getfield  234 nofast_getfield
   1.03%                      <unknown>
   1.03%   [kernel.kallsyms]  _copy_from_iter
   1.03%         interpreter  invokestatic  184 invokestatic
   1.03%   [kernel.kallsyms]  clear_bhb_loop
   1.03%   [kernel.kallsyms]  _copy_to_iter
   1.03%   [kernel.kallsyms]  pipe_write
   1.03%           libc.so.6  __GI___pthread_disable_asynccancel
....................................................................................................
  98.97%  <totals>

....[Distribution by Source]........................................................................
  79.38%         c2, level 4
  12.37%   [kernel.kallsyms]
   3.09%           libc.so.6
   2.06%         interpreter
   1.03%
   1.03%           libjvm.so
....................................................................................................
  98.97%  <totals>

WARNING: The perf event count is suspiciously low (97). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 202674 total address lines.
Perf output processed (skipped 6.303 seconds):
 Column 1: cycles (283 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809

                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e051c:   mov    0x4(%rsp),%r9d
            0x00007fdb245e0521:   mov    0x8(%rsp),%rcx
            0x00007fdb245e0526:   mov    0x10(%rsp),%r8               ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@58 (line 2373)
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.35%    0x00007fdb245e052b:   mov    %eax,%r10d
            0x00007fdb245e052e:   shr    $0x10,%r10d
   0.35%    0x00007fdb245e0532:   xor    %eax,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@18 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.35%    0x00007fdb245e0535:   and    %r10d,%r9d
   1.06%    0x00007fdb245e0538:   mov    0x10(%rcx,%r9,4),%r9d        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@30 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   5.65%    0x00007fdb245e053d:   mov    0xc(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007fdb245e0828
   8.13%    0x00007fdb245e0542:   cmp    %r10d,%ecx
            0x00007fdb245e0545:   jne    0x00007fdb245e0698           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@42 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.77%    0x00007fdb245e054b:   mov    0x10(%r12,%r9,8),%ecx        ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@46 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e0550:   cmp    %r11d,%ecx
            0x00007fdb245e0553:   je     0x00007fdb245e0676           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@53 (line 577)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.06%    0x00007fdb245e0559:   cmp    %ecx,%r11d
            0x00007fdb245e055c:   je     0x00007fdb245e0676           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@2 (line 1858)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.47%    0x00007fdb245e0562:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007fdb245e08d4
   3.53%    0x00007fdb245e0567:   cmp    $0xe8d8,%r8d                 ;   {metadata(&apos;java/lang/String&apos;)}
            0x00007fdb245e056e:   jne    0x00007fdb245e0864           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.35%    0x00007fdb245e0574:   movsbl 0x10(%r12,%r11,8),%ebx       ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@26 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e057a:   lea    (%r12,%rcx,8),%r8            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@8 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e057e:   movsbl 0x10(%r8),%edi               ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@30 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.35%    0x00007fdb245e0583:   cmp    %edi,%ebx
            0x00007fdb245e0585:   jne    0x00007fdb245e07b8           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@33 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.71%    0x00007fdb245e058b:   mov    0x14(%r8),%ebx               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e058f:   mov    0x14(%r12,%r11,8),%r8d       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e0594:   mov    0xc(%r12,%rbx,8),%edx
   6.71%    0x00007fdb245e0599:   mov    0xc(%r12,%r8,8),%ecx
            0x00007fdb245e059e:   cmp    %edx,%ecx
            0x00007fdb245e05a0:   jne    0x00007fdb245e0770           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@44 (line 1863)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.77%    0x00007fdb245e05a6:   lea    (%r12,%rbx,8),%rdi           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   0.35%    0x00007fdb245e05aa:   lea    0x10(%r12,%rbx,8),%rsi
            0x00007fdb245e05af:   lea    (%r12,%r8,8),%rbx            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
                                                                      ; - java.util.HashMap::getNode@63 (line 578)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e05b3:   lea    0x10(%r12,%r8,8),%rdi
            0x00007fdb245e05b8:   test   %ecx,%ecx
            0x00007fdb245e05ba:   je     0x00007fdb245e065d
   0.35%    0x00007fdb245e05c0:   mov    %ecx,%eax
            0x00007fdb245e05c2:   and    $0x1f,%eax
            0x00007fdb245e05c5:   and    $0xffffffe0,%ecx
            0x00007fdb245e05c8:   je     0x00007fdb245e0619
            0x00007fdb245e05ce:   lea    (%rdi,%rcx,1),%rdi
            0x00007fdb245e05d2:   lea    (%rsi,%rcx,1),%rsi
            0x00007fdb245e05d6:   neg    %rcx
            0x00007fdb245e05d9:   vmovdqu (%rdi,%rcx,1),%ymm0
            0x00007fdb245e05de:   vmovdqu (%rsi,%rcx,1),%ymm1
            0x00007fdb245e05e3:   vpxor  %ymm1,%ymm0,%ymm0
            0x00007fdb245e05e7:   vptest %ymm0,%ymm0
....................................................................................................
  35.34%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809

            # {method} {0x00007fdaa04796a8} &apos;hashSet&apos; &apos;()Z&apos; in &apos;org/jmhplayground/jmh6/BranchPrediction&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007fdb245e0400:   mov    0x8(%rsi),%r10d
            0x00007fdb245e0404:   movabs $0x7fdaab000000,%r11
            0x00007fdb245e040e:   add    %r11,%r10
            0x00007fdb245e0411:   cmp    %r10,%rax
            0x00007fdb245e0414:   jne    0x00007fdb23ead280           ;   {runtime_call ic_miss_stub}
            0x00007fdb245e041a:   xchg   %ax,%ax
            0x00007fdb245e041c:   nopl   0x0(%rax)
          [Verified Entry Point]
   1.77%    0x00007fdb245e0420:   mov    %eax,-0x14000(%rsp)
            0x00007fdb245e0427:   push   %rbp
            0x00007fdb245e0428:   sub    $0x30,%rsp
            0x00007fdb245e042c:   cmpl   $0x1,0x20(%r15)
            0x00007fdb245e0434:   jne    0x00007fdb245e094b           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
            0x00007fdb245e043a:   mov    0x1c(%rsi),%r11d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   2.47%    0x00007fdb245e043e:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007fdb245e088c
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   2.83%    0x00007fdb245e0443:   mov    0x10(%rsi),%r8               ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007fdb245e0447:   movslq %r10d,%r9
   0.35%    0x00007fdb245e044a:   dec    %r9
   1.41%    0x00007fdb245e044d:   and    %r8,%r9
   2.12%    0x00007fdb245e0450:   mov    %r9d,%ecx                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007fdb245e0453:   cmp    %r10d,%ecx
            0x00007fdb245e0456:   jae    0x00007fdb245e0731
   0.71%    0x00007fdb245e045c:   mov    0x18(%rsi),%r10d             ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   1.06%    0x00007fdb245e0460:   shl    $0x3,%r11
            0x00007fdb245e0464:   movsbl 0x10(%r11,%rcx,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   2.83%    0x00007fdb245e046a:   add    $0x1,%r8
            0x00007fdb245e046e:   mov    %r8,0x10(%rsi)               ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007fdb245e0472:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007fdb245e08a4
            0x00007fdb245e0477:   cmp    %r8d,%r9d
            0x00007fdb245e047a:   jae    0x00007fdb245e0754
   1.06%    0x00007fdb245e0480:   shl    $0x3,%r10
            0x00007fdb245e0484:   mov    0x10(%r10,%r9,4),%r11d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
   4.59%    0x00007fdb245e0489:   movabs $0x455183360,%r10            ;   {oop(a &apos;java/util/HashSet&apos;{0x0000000455183360})}
            0x00007fdb245e0493:   mov    0xc(%r10),%r10d              ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashSet::contains@1 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e0497:   mov    0x24(%r12,%r10,8),%r10d      ; implicit exception: dispatches to 0x00007fdb245e08bc
                                                                      ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@1 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e049c:   mov    0xc(%r12,%r10,8),%r9d        ; implicit exception: dispatches to 0x00007fdb245e0828
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@10 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.06%    0x00007fdb245e04a1:   test   %r9d,%r9d
            0x00007fdb245e04a4:   jbe    0x00007fdb245e07a0           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@14 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e04aa:   dec    %r9d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@21 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
            0x00007fdb245e04ad:   mov    0xc(%r12,%r11,8),%eax        ; implicit exception: dispatches to 0x00007fdb245e08f8
                                                                      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@1 (line 2363)
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::getNode@23 (line 576)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   2.83%    0x00007fdb245e04b2:   lea    (%r12,%r10,8),%rcx           ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::getNode@1 (line 575)
                                                                      ; - java.util.HashMap::containsKey@2 (line 602)
                                                                      ; - java.util.HashSet::contains@5 (line 213)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
   1.77%    0x00007fdb245e04b6:   lea    (%r12,%r11,8),%r8            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@4 (line 94)
            0x00007fdb245e04ba:   test   %eax,%eax
            0x00007fdb245e04bc:   jne    0x00007fdb245e052b           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@6 (line 2364)
                                                                      ; - java.util.HashMap::hash@9 (line 338)
....................................................................................................
  26.86%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809

                       0x00007fdb245e05f2:   add    $0x20,%rcx
                       0x00007fdb245e05f6:   jne    0x00007fdb245e05d9
                       0x00007fdb245e05f8:   test   %eax,%eax
          ╭            0x00007fdb245e05fa:   je     0x00007fdb245e065d
          │            0x00007fdb245e0600:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │            0x00007fdb245e0606:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │            0x00007fdb245e060c:   vpxor  %ymm1,%ymm0,%ymm0
          │            0x00007fdb245e0610:   vptest %ymm0,%ymm0
          │╭           0x00007fdb245e0615:   jne    0x00007fdb245e0664
          ││╭          0x00007fdb245e0617:   jmp    0x00007fdb245e065d
   1.41%  │││          0x00007fdb245e0619:   mov    %eax,%ecx
          │││          0x00007fdb245e061b:   and    $0xfffffffc,%ecx
          │││╭         0x00007fdb245e061e:   je     0x00007fdb245e0639
          ││││         0x00007fdb245e0620:   lea    (%rdi,%rcx,1),%rdi
          ││││         0x00007fdb245e0624:   lea    (%rsi,%rcx,1),%rsi
   1.06%  ││││         0x00007fdb245e0628:   neg    %rcx
          ││││ ↗       0x00007fdb245e062b:   mov    (%rdi,%rcx,1),%ebx
   2.83%  ││││ │       0x00007fdb245e062e:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│       0x00007fdb245e0631:   jne    0x00007fdb245e0664
   4.95%  ││││││       0x00007fdb245e0633:   add    $0x4,%rcx
          │││││╰       0x00007fdb245e0637:   jne    0x00007fdb245e062b
   0.71%  │││↘│        0x00007fdb245e0639:   test   $0x2,%al
          │││ │ ╭      0x00007fdb245e063b:   je     0x00007fdb245e064f
   0.71%  │││ │ │      0x00007fdb245e063d:   movzwl (%rdi),%ebx
   1.77%  │││ │ │      0x00007fdb245e0640:   movzwl (%rsi),%ecx
   0.35%  │││ │ │      0x00007fdb245e0643:   cmp    %ecx,%ebx
          │││ │ │╭     0x00007fdb245e0645:   jne    0x00007fdb245e0664
   0.35%  │││ │ ││     0x00007fdb245e0647:   lea    0x2(%rdi),%rdi
          │││ │ ││     0x00007fdb245e064b:   lea    0x2(%rsi),%rsi
   0.71%  │││ │ ↘│     0x00007fdb245e064f:   test   $0x1,%al
          │││ │  │╭    0x00007fdb245e0651:   je     0x00007fdb245e065d
   1.41%  │││ │  ││    0x00007fdb245e0653:   movzbl (%rdi),%ebx
   1.41%  │││ │  ││    0x00007fdb245e0656:   movzbl (%rsi),%ecx
          │││ │  ││    0x00007fdb245e0659:   cmp    %ecx,%ebx
          │││ │  ││╭   0x00007fdb245e065b:   jne    0x00007fdb245e0664
          ↘│↘ │  │↘│   0x00007fdb245e065d:   mov    $0x1,%eax
   0.35%   │  │  │ │╭  0x00007fdb245e0662:   jmp    0x00007fdb245e0666
           ↘  ↘  ↘ ↘│  0x00007fdb245e0664:   xor    %eax,%eax
                    ↘  0x00007fdb245e0666:   vpxor  %ymm0,%ymm0,%ymm0            ;   {no_reloc}
                       0x00007fdb245e066a:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.lang.String::equals@44 (line 1863)
                                                                                 ; - java.util.HashMap::getNode@63 (line 578)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007fdb245e066e:   test   %eax,%eax
                       0x00007fdb245e0670:   je     0x00007fdb245e0775           ;*synchronization entry
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@-1 (line 94)
   1.06%               0x00007fdb245e0676:   mov    $0x1,%eax
   0.35%               0x00007fdb245e067b:   vzeroupper
   2.47%               0x00007fdb245e067e:   add    $0x30,%rsp
   0.71%               0x00007fdb245e0682:   pop    %rbp
   1.06%               0x00007fdb245e0683:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       0x00007fdb245e068a:   ja     0x00007fdb245e0935
   2.47%               0x00007fdb245e0690:   ret
                       0x00007fdb245e0691:   xor    %eax,%eax
                       0x00007fdb245e0693:   jmp    0x00007fdb245e052b
                       0x00007fdb245e0698:   mov    0x18(%r12,%r9,8),%ecx        ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@72 (line 580)
                                                                                 ; - java.util.HashMap::containsKey@2 (line 602)
                                                                                 ; - java.util.HashSet::contains@5 (line 213)
                                                                                 ; - org.jmhplayground.jmh6.BranchPrediction::hashSet@7 (line 94)
                       0x00007fdb245e069d:   test   %ecx,%ecx
                       0x00007fdb245e069f:   je     0x00007fdb245e0828           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - java.util.HashMap::getNode@78 (line 580)
....................................................................................................
  26.15%  <total for region 3>

....[Hottest Regions]...............................................................................
  35.34%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809
  26.86%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809
  26.15%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809
   5.30%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 835
   0.71%   [kernel.kallsyms]  native_write_msr
   0.35%   [kernel.kallsyms]  bpf_lsm_file_permission
   0.35%   [kernel.kallsyms]  ksys_write
   0.35%   [kernel.kallsyms]  __fdget_pos
   0.35%   [kernel.kallsyms]  tcp_v4_rcv
   0.35%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.35%   [kernel.kallsyms]  __mutex_lock.constprop.0
   0.35%   [kernel.kallsyms]  mutex_lock
   0.35%   [kernel.kallsyms]  entry_SYSCALL_64
   0.35%           libjvm.so  RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*)
   0.35%                      <unknown>
   0.35%           libc.so.6  _IO_fwrite
   0.35%           libc.so.6  __GI___pthread_disable_asynccancel
   0.35%           libc.so.6  syscall
   0.35%           libc.so.6  __memmove_evex_unaligned_erms
   0.35%           libc.so.6  __memset_evex_unaligned_erms
....................................................................................................
  99.65%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  88.34%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::hashSet, version 2, compile id 809
   5.30%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_hashSet_jmhTest::hashSet_avgt_jmhStub, version 6, compile id 835
   0.71%   [kernel.kallsyms]  native_write_msr
   0.35%   [kernel.kallsyms]  __fdget_pos
   0.35%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.35%   [kernel.kallsyms]  mutex_lock
   0.35%           libc.so.6  __memmove_evex_unaligned_erms
   0.35%           libc.so.6  syscall
   0.35%   [kernel.kallsyms]  __mutex_lock.constprop.0
   0.35%   [kernel.kallsyms]  ksys_write
   0.35%   [kernel.kallsyms]  entry_SYSCALL_64
   0.35%           libjvm.so  RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*)
   0.35%           libc.so.6  _IO_fwrite
   0.35%                      <unknown>
   0.35%   [kernel.kallsyms]  tcp_v4_rcv
   0.35%           libc.so.6  __GI___pthread_disable_asynccancel
   0.35%   [kernel.kallsyms]  bpf_lsm_file_permission
   0.35%           libc.so.6  __memset_evex_unaligned_erms
....................................................................................................
  99.65%  <totals>

....[Distribution by Source]........................................................................
  93.64%         c2, level 4
   3.53%   [kernel.kallsyms]
   1.77%           libc.so.6
   0.35%
   0.35%           libjvm.so
....................................................................................................
  99.65%  <totals>

WARNING: The perf event count is suspiciously low (283). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:branch-misses":
  0.690 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:branches":
  26.833 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:cycles":
  55.770 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-loads":
  36.517 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:dTLB-stores":
  4.441 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:iTLB-load-misses":
  ≈ 10⁻³ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.hashSet:instructions":
  123.755 #/op


# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.immutableSet
# Parameters: (same = false, shuffle = false)

# Run progress: 33.33% complete, ETA 00:01:18
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.003 ns/op
# Warmup Iteration   2: 6.458 ns/op
# Warmup Iteration   3: 6.418 ns/op
# Warmup Iteration   4: 6.442 ns/op
# Warmup Iteration   5: 6.480 ns/op
# Warmup Iteration   6: 6.437 ns/op
# Warmup Iteration   7: 6.441 ns/op
# Warmup Iteration   8: 6.449 ns/op
# Warmup Iteration   9: 6.470 ns/op
# Warmup Iteration  10: 6.481 ns/op
Iteration   1: 6.464 ns/op
Iteration   2: 6.446 ns/op
Iteration   3: 6.509 ns/op
Iteration   4: 6.758 ns/op
Iteration   5: 6.480 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 41.67% complete, ETA 00:01:09
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.843 ns/op
# Warmup Iteration   2: 6.448 ns/op
# Warmup Iteration   3: 6.455 ns/op
# Warmup Iteration   4: 6.431 ns/op
# Warmup Iteration   5: 6.433 ns/op
# Warmup Iteration   6: 6.472 ns/op
# Warmup Iteration   7: 6.428 ns/op
# Warmup Iteration   8: 6.454 ns/op
# Warmup Iteration   9: 6.450 ns/op
# Warmup Iteration  10: 6.499 ns/op
Iteration   1: 6.442 ns/op
Iteration   2: 6.436 ns/op
Iteration   3: 6.430 ns/op
Iteration   4: 6.429 ns/op
Iteration   5: 6.686 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.immutableSet":
  6.508 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (6.429, 6.508, 6.758), stdev = 0.117
  CI (99.9%): [6.331, 6.685] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:CPI":
  0.234 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:IPC":
  4.267 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-load-misses":
  0.020 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-loads":
  31.701 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-stores":
  4.154 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-icache-load-misses":
  0.014 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-loads":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-stores":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:asm":
PrintAssembly processed: 201808 total address lines.
Perf output processed (skipped 6.362 seconds):
 Column 1: cycles (154 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804

                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de4cd:   mov    %rbp,%r10                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@58 (line 2373)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de4d0:   mov    %eax,%r9d
             0x00007f91345de4d3:   sar    $0x1f,%r9d
             0x00007f91345de4d7:   mov    %eax,%ecx
             0x00007f91345de4d9:   xor    $0xc,%ecx
   0.65%     0x00007f91345de4dc:   movslq %eax,%r11
   3.90%     0x00007f91345de4df:   imul   $0x2aaaaaab,%r11,%r11
   0.65%     0x00007f91345de4e6:   sar    $0x21,%r11
             0x00007f91345de4ea:   mov    %r11d,%ebx
             0x00007f91345de4ed:   sub    %r9d,%ebx
   0.65%     0x00007f91345de4f0:   lea    0x0(,%rbx,8),%r9d
             0x00007f91345de4f8:   lea    (%r9,%rbx,4),%ebx
             0x00007f91345de4fc:   mov    %eax,%r11d
             0x00007f91345de4ff:   sub    %ebx,%r11d                   ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Math::floorMod@2 (line 1583)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   3.25%     0x00007f91345de502:   test   %ecx,%ecx
          ╭  0x00007f91345de504:   jge    0x00007f91345de512           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@7 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f91345de506:   cmp    %ebx,%eax
          │  0x00007f91345de508:   je     0x00007f91345de81c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@11 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f91345de50e:   add    $0xc,%r11d                   ;*invokestatic floorMod {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.30%  ↘  0x00007f91345de512:   cmp    $0xc,%r11d
             0x00007f91345de516:   jae    0x00007f91345de7bc
   1.95%     0x00007f91345de51c:   movabs $0x45525f418,%r9             ;   {oop(a &apos;java/lang/Object&apos;[12] {0x000000045525f418})}
             0x00007f91345de526:   mov    0x10(%r9,%r11,4),%edi        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ImmutableCollections$SetN::probe@18 (line 1016)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   9.09%     0x00007f91345de52b:   mov    0x8(%r12,%rdi,8),%ecx        ; implicit exception: dispatches to 0x00007f91345de924
  12.34%     0x00007f91345de530:   cmp    %edi,%r8d
             0x00007f91345de533:   je     0x00007f91345de647           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@2 (line 1858)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de539:   cmp    $0xe8d8,%ecx                 ;   {metadata(&apos;java/lang/String&apos;)}
             0x00007f91345de53f:   jne    0x00007f91345de8a2           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   3.25%     0x00007f91345de545:   movsbl 0x10(%r12,%r8,8),%r9d        ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@26 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de54b:   lea    (%r12,%rdi,8),%rcx           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de54f:   movsbl 0x10(%rcx),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@30 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de553:   cmp    %edi,%r9d
             0x00007f91345de556:   jne    0x00007f91345de7f4           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@33 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.60%     0x00007f91345de55c:   mov    0x14(%rcx),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de55f:   mov    0x14(%r12,%r8,8),%ebx        ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de564:   mov    0xc(%r12,%rsi,8),%ecx
   8.44%     0x00007f91345de569:   mov    0xc(%r12,%rbx,8),%edx        ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de56e:   lea    (%r12,%rbx,8),%rbp           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de572:   lea    0x10(%r12,%rbx,8),%r13
             0x00007f91345de577:   cmp    %ecx,%edx
             0x00007f91345de579:   jne    0x00007f91345de66b           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   4.55%     0x00007f91345de57f:   lea    (%r12,%rsi,8),%rcx           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f91345de583:   lea    0x10(%r12,%rsi,8),%rsi
             0x00007f91345de588:   mov    %r13,%rdi
....................................................................................................
  52.60%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804

                        0x00007f91345de5c7:   add    $0x20,%rcx
                        0x00007f91345de5cb:   jne    0x00007f91345de5ae
                        0x00007f91345de5cd:   test   %eax,%eax
          ╭             0x00007f91345de5cf:   je     0x00007f91345de632
          │             0x00007f91345de5d5:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007f91345de5db:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007f91345de5e1:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007f91345de5e5:   vptest %ymm0,%ymm0
          │╭            0x00007f91345de5ea:   jne    0x00007f91345de639
          ││╭           0x00007f91345de5ec:   jmp    0x00007f91345de632
   0.65%  │││           0x00007f91345de5ee:   mov    %eax,%ecx
          │││           0x00007f91345de5f0:   and    $0xfffffffc,%ecx
          │││╭          0x00007f91345de5f3:   je     0x00007f91345de60e
          ││││          0x00007f91345de5f5:   lea    (%rdi,%rcx,1),%rdi
          ││││          0x00007f91345de5f9:   lea    (%rsi,%rcx,1),%rsi
   0.65%  ││││          0x00007f91345de5fd:   neg    %rcx
          ││││ ↗        0x00007f91345de600:   mov    (%rdi,%rcx,1),%ebx
          ││││ │        0x00007f91345de603:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007f91345de606:   jne    0x00007f91345de639
   6.49%  ││││││        0x00007f91345de608:   add    $0x4,%rcx
          │││││╰        0x00007f91345de60c:   jne    0x00007f91345de600
          │││↘│         0x00007f91345de60e:   test   $0x2,%al
          │││ │ ╭       0x00007f91345de610:   je     0x00007f91345de624
          │││ │ │       0x00007f91345de612:   movzwl (%rdi),%ebx
          │││ │ │       0x00007f91345de615:   movzwl (%rsi),%ecx
   1.95%  │││ │ │       0x00007f91345de618:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007f91345de61a:   jne    0x00007f91345de639
   0.65%  │││ │ ││      0x00007f91345de61c:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007f91345de620:   lea    0x2(%rsi),%rsi
          │││ │ ↘│      0x00007f91345de624:   test   $0x1,%al
          │││ │  │╭     0x00007f91345de626:   je     0x00007f91345de632
   0.65%  │││ │  ││     0x00007f91345de628:   movzbl (%rdi),%ebx
   1.30%  │││ │  ││     0x00007f91345de62b:   movzbl (%rsi),%ecx
          │││ │  ││     0x00007f91345de62e:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007f91345de630:   jne    0x00007f91345de639
          ↘│↘ │  │↘│    0x00007f91345de632:   mov    $0x1,%eax
           │  │  │ │╭   0x00007f91345de637:   jmp    0x00007f91345de63b           ;   {no_reloc}
   0.65%   ↘  ↘  ↘ ↘│   0x00007f91345de639:   xor    %eax,%eax
                    ↘   0x00007f91345de63b:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007f91345de63f:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@44 (line 1863)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f91345de643:   test   %eax,%eax
                     ╭  0x00007f91345de645:   je     0x00007f91345de66b           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     │                                                            ; - java.util.ImmutableCollections$SetN::probe@34 (line 1019)
                     │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.30%             │  0x00007f91345de647:   test   %r11d,%r11d
                     │  0x00007f91345de64a:   jl     0x00007f91345de7dc           ;*synchronization entry
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
                     │  0x00007f91345de650:   mov    $0x1,%eax
                     │  0x00007f91345de655:   vzeroupper
   0.65%             │  0x00007f91345de658:   add    $0x20,%rsp
   0.65%             │  0x00007f91345de65c:   pop    %rbp
   1.30%             │  0x00007f91345de65d:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007f91345de664:   ja     0x00007f91345de940
                     │  0x00007f91345de66a:   ret
                     ↘  0x00007f91345de66b:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@39 (line 1021)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f91345de66e:   cmp    $0xc,%r11d
                        0x00007f91345de672:   jne    0x00007f91345de87a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
....................................................................................................
  16.88%  <total for region 2>

....[Hottest Regions]...............................................................................
  52.60%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
  16.88%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   5.84%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   5.84%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   5.84%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 827
   1.95%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   1.95%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   1.30%   [kernel.kallsyms]  native_write_msr
   1.30%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   1.30%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   0.65%   [kernel.kallsyms]  file_has_perm
   0.65%   [kernel.kallsyms]  copy_page_from_iter
   0.65%   [kernel.kallsyms]  entry_SYSCALL_64
   0.65%   [kernel.kallsyms]  clear_bhb_loop
   0.65%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   0.65%           libjvm.so  FrameMap::FrameMap(ciMethod*, int, int)
   0.65%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
....................................................................................................
  99.35%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  88.31%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 804
   5.84%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 827
   1.30%   [kernel.kallsyms]  native_write_msr
   0.65%   [kernel.kallsyms]  file_has_perm
   0.65%           libjvm.so  FrameMap::FrameMap(ciMethod*, int, int)
   0.65%   [kernel.kallsyms]  copy_page_from_iter
   0.65%   [kernel.kallsyms]  clear_bhb_loop
   0.65%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.65%   [kernel.kallsyms]  entry_SYSCALL_64
....................................................................................................
  99.35%  <totals>

....[Distribution by Source]........................................................................
  94.16%         c2, level 4
   3.90%   [kernel.kallsyms]
   1.30%           libjvm.so
....................................................................................................
  99.35%  <totals>

WARNING: The perf event count is suspiciously low (154). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 201595 total address lines.
Perf output processed (skipped 7.785 seconds):
 Column 1: cycles (150 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803

                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df24d:   mov    %rbp,%r10                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@58 (line 2373)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df250:   mov    %eax,%r9d
             0x00007f38a45df253:   sar    $0x1f,%r9d
             0x00007f38a45df257:   mov    %eax,%ecx
             0x00007f38a45df259:   xor    $0xc,%ecx
   0.67%     0x00007f38a45df25c:   movslq %eax,%r11
   2.00%     0x00007f38a45df25f:   imul   $0x2aaaaaab,%r11,%r11
   2.00%     0x00007f38a45df266:   sar    $0x21,%r11
             0x00007f38a45df26a:   mov    %r11d,%ebx
             0x00007f38a45df26d:   sub    %r9d,%ebx
   0.67%     0x00007f38a45df270:   lea    0x0(,%rbx,8),%r9d
   0.67%     0x00007f38a45df278:   lea    (%r9,%rbx,4),%ebx
   0.67%     0x00007f38a45df27c:   mov    %eax,%r11d
             0x00007f38a45df27f:   sub    %ebx,%r11d                   ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Math::floorMod@2 (line 1583)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.67%     0x00007f38a45df282:   test   %ecx,%ecx
          ╭  0x00007f38a45df284:   jge    0x00007f38a45df292           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@7 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f38a45df286:   cmp    %ebx,%eax
          │  0x00007f38a45df288:   je     0x00007f38a45df59c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@11 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f38a45df28e:   add    $0xc,%r11d                   ;*invokestatic floorMod {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.67%  ↘  0x00007f38a45df292:   cmp    $0xc,%r11d
             0x00007f38a45df296:   jae    0x00007f38a45df53c
   2.00%     0x00007f38a45df29c:   movabs $0x45531a938,%r9             ;   {oop(a &apos;java/lang/Object&apos;[12] {0x000000045531a938})}
             0x00007f38a45df2a6:   mov    0x10(%r9,%r11,4),%edi        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ImmutableCollections$SetN::probe@18 (line 1016)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   8.00%     0x00007f38a45df2ab:   mov    0x8(%r12,%rdi,8),%ecx        ; implicit exception: dispatches to 0x00007f38a45df6a4
  12.67%     0x00007f38a45df2b0:   cmp    %edi,%r8d
             0x00007f38a45df2b3:   je     0x00007f38a45df3c7           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@2 (line 1858)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2b9:   cmp    $0xe8d8,%ecx                 ;   {metadata(&apos;java/lang/String&apos;)}
             0x00007f38a45df2bf:   jne    0x00007f38a45df622           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.00%     0x00007f38a45df2c5:   movsbl 0x10(%r12,%r8,8),%r9d        ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@26 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2cb:   lea    (%r12,%rdi,8),%rcx           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2cf:   movsbl 0x10(%rcx),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@30 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2d3:   cmp    %edi,%r9d
             0x00007f38a45df2d6:   jne    0x00007f38a45df574           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@33 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   3.33%     0x00007f38a45df2dc:   mov    0x14(%rcx),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2df:   mov    0x14(%r12,%r8,8),%ebx        ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.67%     0x00007f38a45df2e4:   mov    0xc(%r12,%rsi,8),%ecx
  12.67%     0x00007f38a45df2e9:   mov    0xc(%r12,%rbx,8),%edx        ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2ee:   lea    (%r12,%rbx,8),%rbp           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df2f2:   lea    0x10(%r12,%rbx,8),%r13
             0x00007f38a45df2f7:   cmp    %ecx,%edx
             0x00007f38a45df2f9:   jne    0x00007f38a45df3eb           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.00%     0x00007f38a45df2ff:   lea    (%r12,%rsi,8),%rcx           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f38a45df303:   lea    0x10(%r12,%rsi,8),%rsi
             0x00007f38a45df308:   mov    %r13,%rdi
....................................................................................................
  55.33%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803

                        0x00007f38a45df347:   add    $0x20,%rcx
                        0x00007f38a45df34b:   jne    0x00007f38a45df32e
                        0x00007f38a45df34d:   test   %eax,%eax
          ╭             0x00007f38a45df34f:   je     0x00007f38a45df3b2
          │             0x00007f38a45df355:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007f38a45df35b:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007f38a45df361:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007f38a45df365:   vptest %ymm0,%ymm0
          │╭            0x00007f38a45df36a:   jne    0x00007f38a45df3b9
          ││╭           0x00007f38a45df36c:   jmp    0x00007f38a45df3b2
   2.00%  │││           0x00007f38a45df36e:   mov    %eax,%ecx
          │││           0x00007f38a45df370:   and    $0xfffffffc,%ecx
          │││╭          0x00007f38a45df373:   je     0x00007f38a45df38e
          ││││          0x00007f38a45df375:   lea    (%rdi,%rcx,1),%rdi
          ││││          0x00007f38a45df379:   lea    (%rsi,%rcx,1),%rsi
          ││││          0x00007f38a45df37d:   neg    %rcx
          ││││ ↗        0x00007f38a45df380:   mov    (%rdi,%rcx,1),%ebx
          ││││ │        0x00007f38a45df383:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007f38a45df386:   jne    0x00007f38a45df3b9
   2.67%  ││││││        0x00007f38a45df388:   add    $0x4,%rcx
          │││││╰        0x00007f38a45df38c:   jne    0x00007f38a45df380
          │││↘│         0x00007f38a45df38e:   test   $0x2,%al
          │││ │ ╭       0x00007f38a45df390:   je     0x00007f38a45df3a4
          │││ │ │       0x00007f38a45df392:   movzwl (%rdi),%ebx
          │││ │ │       0x00007f38a45df395:   movzwl (%rsi),%ecx
   1.33%  │││ │ │       0x00007f38a45df398:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007f38a45df39a:   jne    0x00007f38a45df3b9
          │││ │ ││      0x00007f38a45df39c:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007f38a45df3a0:   lea    0x2(%rsi),%rsi
          │││ │ ↘│      0x00007f38a45df3a4:   test   $0x1,%al
          │││ │  │╭     0x00007f38a45df3a6:   je     0x00007f38a45df3b2
   0.67%  │││ │  ││     0x00007f38a45df3a8:   movzbl (%rdi),%ebx
   1.33%  │││ │  ││     0x00007f38a45df3ab:   movzbl (%rsi),%ecx
          │││ │  ││     0x00007f38a45df3ae:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007f38a45df3b0:   jne    0x00007f38a45df3b9
          ↘│↘ │  │↘│    0x00007f38a45df3b2:   mov    $0x1,%eax
   0.67%   │  │  │ │╭   0x00007f38a45df3b7:   jmp    0x00007f38a45df3bb           ;   {no_reloc}
   0.67%   ↘  ↘  ↘ ↘│   0x00007f38a45df3b9:   xor    %eax,%eax
                    ↘   0x00007f38a45df3bb:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007f38a45df3bf:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@44 (line 1863)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.67%                0x00007f38a45df3c3:   test   %eax,%eax
                     ╭  0x00007f38a45df3c5:   je     0x00007f38a45df3eb           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     │                                                            ; - java.util.ImmutableCollections$SetN::probe@34 (line 1019)
                     │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.67%             │  0x00007f38a45df3c7:   test   %r11d,%r11d
                     │  0x00007f38a45df3ca:   jl     0x00007f38a45df55c           ;*synchronization entry
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
                     │  0x00007f38a45df3d0:   mov    $0x1,%eax
                     │  0x00007f38a45df3d5:   vzeroupper
                     │  0x00007f38a45df3d8:   add    $0x20,%rsp
                     │  0x00007f38a45df3dc:   pop    %rbp
   0.67%             │  0x00007f38a45df3dd:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007f38a45df3e4:   ja     0x00007f38a45df6c0
                     │  0x00007f38a45df3ea:   ret
                     ↘  0x00007f38a45df3eb:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@39 (line 1021)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f38a45df3ee:   cmp    $0xc,%r11d
                        0x00007f38a45df3f2:   jne    0x00007f38a45df5fa           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
....................................................................................................
  11.33%  <total for region 2>

....[Hottest Regions]...............................................................................
  55.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
  11.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   8.00%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   6.67%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 826
   5.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   1.33%   [kernel.kallsyms]  native_write_msr
   1.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   0.67%   [kernel.kallsyms]  __task_pid_nr_ns
   0.67%   [kernel.kallsyms]  smp_call_function_many_cond
   0.67%   [kernel.kallsyms]  vfs_write
   0.67%   [kernel.kallsyms]  _copy_from_iter
   0.67%   [kernel.kallsyms]  __mutex_lock.constprop.0
   0.67%   [kernel.kallsyms]  entry_SYSCALL_64
   0.67%   [kernel.kallsyms]  clear_bhb_loop
   0.67%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   0.67%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   0.67%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   0.67%      hsdis-amd64.so  print_insn
   0.67%           libjvm.so  os::current_thread_id()
   0.67%           libc.so.6  __printf_buffer_write
   1.33%  <...other 2 warm regions...>
....................................................................................................
  99.33%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  83.33%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 803
   6.67%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 826
   1.33%   [kernel.kallsyms]  native_write_msr
   0.67%           libc.so.6  __printf_buffer
   0.67%   [kernel.kallsyms]  smp_call_function_many_cond
   0.67%   [kernel.kallsyms]  __mutex_lock.constprop.0
   0.67%   [kernel.kallsyms]  entry_SYSCALL_64
   0.67%           libjvm.so  os::current_thread_id()
   0.67%           libc.so.6  __GI___pthread_enable_asynccancel
   0.67%   [kernel.kallsyms]  __task_pid_nr_ns
   0.67%      hsdis-amd64.so  print_insn
   0.67%   [kernel.kallsyms]  _copy_from_iter
   0.67%   [kernel.kallsyms]  clear_bhb_loop
   0.67%           libc.so.6  __printf_buffer_write
   0.67%   [kernel.kallsyms]  vfs_write
....................................................................................................
  99.33%  <totals>

....[Distribution by Source]........................................................................
  90.00%         c2, level 4
   6.00%   [kernel.kallsyms]
   2.00%           libc.so.6
   0.67%           libjvm.so
   0.67%      hsdis-amd64.so
....................................................................................................
  99.33%  <totals>

WARNING: The perf event count is suspiciously low (150). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:branch-misses":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:branches":
  28.778 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:cycles":
  31.464 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-loads":
  31.616 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-stores":
  4.153 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:iTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:instructions":
  134.223 #/op


# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.immutableSet
# Parameters: (same = false, shuffle = true)

# Run progress: 50.00% complete, ETA 00:00:59
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 15.774 ns/op
# Warmup Iteration   2: 14.538 ns/op
# Warmup Iteration   3: 14.832 ns/op
# Warmup Iteration   4: 14.569 ns/op
# Warmup Iteration   5: 14.695 ns/op
# Warmup Iteration   6: 14.562 ns/op
# Warmup Iteration   7: 14.508 ns/op
# Warmup Iteration   8: 14.918 ns/op
# Warmup Iteration   9: 14.842 ns/op
# Warmup Iteration  10: 15.223 ns/op
Iteration   1: 14.719 ns/op
Iteration   2: 14.711 ns/op
Iteration   3: 14.617 ns/op
Iteration   4: 14.614 ns/op
Iteration   5: 14.591 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 58.33% complete, ETA 00:00:49
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 16.010 ns/op
# Warmup Iteration   2: 15.026 ns/op
# Warmup Iteration   3: 16.360 ns/op
# Warmup Iteration   4: 14.718 ns/op
# Warmup Iteration   5: 14.816 ns/op
# Warmup Iteration   6: 14.677 ns/op
# Warmup Iteration   7: 14.750 ns/op
# Warmup Iteration   8: 14.901 ns/op
# Warmup Iteration   9: 14.720 ns/op
# Warmup Iteration  10: 15.795 ns/op
Iteration   1: 15.222 ns/op
Iteration   2: 14.776 ns/op
Iteration   3: 14.710 ns/op
Iteration   4: 14.716 ns/op
Iteration   5: 14.753 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.immutableSet":
  14.743 ±(99.9%) 0.271 ns/op [Average]
  (min, avg, max) = (14.591, 14.743, 15.222), stdev = 0.179
  CI (99.9%): [14.472, 15.014] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:CPI":
  0.525 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:IPC":
  1.903 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-load-misses":
  0.041 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-loads":
  32.424 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-dcache-stores":
  4.549 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:L1-icache-load-misses":
  0.053 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-load-misses":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-loads":
  0.004 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-store-misses":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:LLC-stores":
  0.004 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:asm":
PrintAssembly processed: 202647 total address lines.
Perf output processed (skipped 6.217 seconds):
 Column 1: cycles (364 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815

             0x00007f66c45e20c8:   mov    %eax,0xc(%r12,%r8,8)         ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@55 (line 2370)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e20cd:   mov    %rbp,%r10                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@58 (line 2373)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.65%     0x00007f66c45e20d0:   mov    %eax,%r9d
             0x00007f66c45e20d3:   sar    $0x1f,%r9d
   0.55%     0x00007f66c45e20d7:   mov    %eax,%ecx
             0x00007f66c45e20d9:   xor    $0xc,%ecx
   0.55%     0x00007f66c45e20dc:   movslq %eax,%r11
   1.10%     0x00007f66c45e20df:   imul   $0x2aaaaaab,%r11,%r11
   1.10%     0x00007f66c45e20e6:   sar    $0x21,%r11
   0.27%     0x00007f66c45e20ea:   mov    %r11d,%ebx
   0.27%     0x00007f66c45e20ed:   sub    %r9d,%ebx
   0.82%     0x00007f66c45e20f0:   lea    0x0(,%rbx,8),%r9d
   1.65%     0x00007f66c45e20f8:   lea    (%r9,%rbx,4),%ebx
   0.55%     0x00007f66c45e20fc:   mov    %eax,%r11d
             0x00007f66c45e20ff:   sub    %ebx,%r11d                   ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Math::floorMod@2 (line 1583)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.55%     0x00007f66c45e2102:   test   %ecx,%ecx
          ╭  0x00007f66c45e2104:   jge    0x00007f66c45e2112           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@7 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f66c45e2106:   cmp    %ebx,%eax
          │  0x00007f66c45e2108:   je     0x00007f66c45e241c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@11 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%  │  0x00007f66c45e210e:   add    $0xc,%r11d                   ;*invokestatic floorMod {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.20%  ↘  0x00007f66c45e2112:   cmp    $0xc,%r11d
             0x00007f66c45e2116:   jae    0x00007f66c45e23bc
   3.85%     0x00007f66c45e211c:   movabs $0x455033878,%r9             ;   {oop(a &apos;java/lang/Object&apos;[12] {0x0000000455033878})}
   0.27%     0x00007f66c45e2126:   mov    0x10(%r9,%r11,4),%edi        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ImmutableCollections$SetN::probe@18 (line 1016)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   4.12%     0x00007f66c45e212b:   mov    0x8(%r12,%rdi,8),%ecx        ; implicit exception: dispatches to 0x00007f66c45e2524
   5.22%     0x00007f66c45e2130:   cmp    %edi,%r8d
             0x00007f66c45e2133:   je     0x00007f66c45e2247           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@2 (line 1858)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.27%     0x00007f66c45e2139:   cmp    $0xe8d8,%ecx                 ;   {metadata(&apos;java/lang/String&apos;)}
             0x00007f66c45e213f:   jne    0x00007f66c45e24a2           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.55%     0x00007f66c45e2145:   movsbl 0x10(%r12,%r8,8),%r9d        ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@26 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e214b:   lea    (%r12,%rdi,8),%rcx           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e214f:   movsbl 0x10(%rcx),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@30 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.55%     0x00007f66c45e2153:   cmp    %edi,%r9d
             0x00007f66c45e2156:   jne    0x00007f66c45e23f4           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@33 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.10%     0x00007f66c45e215c:   mov    0x14(%rcx),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e215f:   mov    0x14(%r12,%r8,8),%ebx        ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e2164:   mov    0xc(%r12,%rsi,8),%ecx
   6.87%     0x00007f66c45e2169:   mov    0xc(%r12,%rbx,8),%edx        ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e216e:   lea    (%r12,%rbx,8),%rbp           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e2172:   lea    0x10(%r12,%rbx,8),%r13
             0x00007f66c45e2177:   cmp    %ecx,%edx
             0x00007f66c45e2179:   jne    0x00007f66c45e226b           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%     0x00007f66c45e217f:   lea    (%r12,%rsi,8),%rcx           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f66c45e2183:   lea    0x10(%r12,%rsi,8),%rsi
             0x00007f66c45e2188:   mov    %r13,%rdi
....................................................................................................
  35.71%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815

                        0x00007f66c45e21c7:   add    $0x20,%rcx
                        0x00007f66c45e21cb:   jne    0x00007f66c45e21ae
                        0x00007f66c45e21cd:   test   %eax,%eax
          ╭             0x00007f66c45e21cf:   je     0x00007f66c45e2232
          │             0x00007f66c45e21d5:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007f66c45e21db:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007f66c45e21e1:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007f66c45e21e5:   vptest %ymm0,%ymm0
          │╭            0x00007f66c45e21ea:   jne    0x00007f66c45e2239
          ││╭           0x00007f66c45e21ec:   jmp    0x00007f66c45e2232
   2.20%  │││           0x00007f66c45e21ee:   mov    %eax,%ecx
          │││           0x00007f66c45e21f0:   and    $0xfffffffc,%ecx
          │││╭          0x00007f66c45e21f3:   je     0x00007f66c45e220e
          ││││          0x00007f66c45e21f5:   lea    (%rdi,%rcx,1),%rdi
          ││││          0x00007f66c45e21f9:   lea    (%rsi,%rcx,1),%rsi
   0.27%  ││││          0x00007f66c45e21fd:   neg    %rcx
   0.55%  ││││ ↗        0x00007f66c45e2200:   mov    (%rdi,%rcx,1),%ebx
   3.57%  ││││ │        0x00007f66c45e2203:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007f66c45e2206:   jne    0x00007f66c45e2239
   2.47%  ││││││        0x00007f66c45e2208:   add    $0x4,%rcx
          │││││╰        0x00007f66c45e220c:   jne    0x00007f66c45e2200
   0.55%  │││↘│         0x00007f66c45e220e:   test   $0x2,%al
          │││ │ ╭       0x00007f66c45e2210:   je     0x00007f66c45e2224
          │││ │ │       0x00007f66c45e2212:   movzwl (%rdi),%ebx
          │││ │ │       0x00007f66c45e2215:   movzwl (%rsi),%ecx
          │││ │ │       0x00007f66c45e2218:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007f66c45e221a:   jne    0x00007f66c45e2239
          │││ │ ││      0x00007f66c45e221c:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007f66c45e2220:   lea    0x2(%rsi),%rsi
   1.10%  │││ │ ↘│      0x00007f66c45e2224:   test   $0x1,%al
          │││ │  │╭     0x00007f66c45e2226:   je     0x00007f66c45e2232
   0.55%  │││ │  ││     0x00007f66c45e2228:   movzbl (%rdi),%ebx
   0.55%  │││ │  ││     0x00007f66c45e222b:   movzbl (%rsi),%ecx
   0.27%  │││ │  ││     0x00007f66c45e222e:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007f66c45e2230:   jne    0x00007f66c45e2239
   0.55%  ↘│↘ │  │↘│    0x00007f66c45e2232:   mov    $0x1,%eax
           │  │  │ │╭   0x00007f66c45e2237:   jmp    0x00007f66c45e223b           ;   {no_reloc}
   3.57%   ↘  ↘  ↘ ↘│   0x00007f66c45e2239:   xor    %eax,%eax
   0.27%            ↘   0x00007f66c45e223b:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007f66c45e223f:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@44 (line 1863)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f66c45e2243:   test   %eax,%eax
                     ╭  0x00007f66c45e2245:   je     0x00007f66c45e226b           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     │                                                            ; - java.util.ImmutableCollections$SetN::probe@34 (line 1019)
                     │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                     │  0x00007f66c45e2247:   test   %r11d,%r11d
                     │  0x00007f66c45e224a:   jl     0x00007f66c45e23dc           ;*synchronization entry
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
   0.27%             │  0x00007f66c45e2250:   mov    $0x1,%eax
                     │  0x00007f66c45e2255:   vzeroupper
   0.55%             │  0x00007f66c45e2258:   add    $0x20,%rsp
                     │  0x00007f66c45e225c:   pop    %rbp
   2.47%             │  0x00007f66c45e225d:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007f66c45e2264:   ja     0x00007f66c45e2540
                     │  0x00007f66c45e226a:   ret
   1.92%             ↘  0x00007f66c45e226b:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@39 (line 1021)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.27%                0x00007f66c45e226e:   cmp    $0xc,%r11d
                        0x00007f66c45e2272:   jne    0x00007f66c45e247a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.55%                0x00007f66c45e2278:   mov    0x458(%r15),%r11             ; ImmutableOopMap {r10=Oop r8=NarrowOop rbp=Oop r13=Derived_oop_rbp }
                                                                                  ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                  ; - (reexecute) java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.27%                0x00007f66c45e227f:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                                                                                  ;   {poll}
   3.02%                0x00007f66c45e2282:   cmp    $0x8aa066fa,%r8d             ;   {oop(&quot;:scheme&quot;{0x00000004550337d0})}
                        0x00007f66c45e2289:   jne    0x00007f66c45e2290           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@2 (line 1858)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f66c45e228b:   xor    %r11d,%r11d
....................................................................................................
  25.82%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815

            # {method} {0x00007f663c4795d8} &apos;immutableSet&apos; &apos;()Z&apos; in &apos;org/jmhplayground/jmh6/BranchPrediction&apos;
            #           [sp+0x30]  (sp of caller)
            0x00007f66c45e1fe0:   mov    0x8(%rsi),%r10d
            0x00007f66c45e1fe4:   movabs $0x7f6647000000,%r11
            0x00007f66c45e1fee:   add    %r11,%r10
            0x00007f66c45e1ff1:   cmp    %r10,%rax
            0x00007f66c45e1ff4:   jne    0x00007f66c3ead280           ;   {runtime_call ic_miss_stub}
            0x00007f66c45e1ffa:   xchg   %ax,%ax
            0x00007f66c45e1ffc:   nopl   0x0(%rax)
          [Verified Entry Point]
   0.82%    0x00007f66c45e2000:   mov    %eax,-0x14000(%rsp)
            0x00007f66c45e2007:   push   %rbp
            0x00007f66c45e2008:   sub    $0x20,%rsp
            0x00007f66c45e200c:   cmpl   $0x1,0x20(%r15)
            0x00007f66c45e2014:   jne    0x00007f66c45e2556           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
            0x00007f66c45e201a:   mov    0x1c(%rsi),%r11d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   0.82%    0x00007f66c45e201e:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007f66c45e24d4
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   2.20%    0x00007f66c45e2023:   mov    0x10(%rsi),%r8               ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f66c45e2027:   movslq %r10d,%r9
   0.55%    0x00007f66c45e202a:   dec    %r9
   1.37%    0x00007f66c45e202d:   and    %r8,%r9
   1.10%    0x00007f66c45e2030:   mov    %r9d,%r9d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   0.55%    0x00007f66c45e2033:   cmp    %r10d,%r9d
            0x00007f66c45e2036:   jae    0x00007f66c45e2382
   1.92%    0x00007f66c45e203c:   mov    0x18(%rsi),%ecx              ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   0.82%    0x00007f66c45e203f:   lea    (%r12,%r11,8),%r10
            0x00007f66c45e2043:   movsbl 0x10(%r10,%r9,1),%ebp        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   1.37%    0x00007f66c45e2049:   add    $0x1,%r8
            0x00007f66c45e204d:   mov    %r8,0x10(%rsi)               ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f66c45e2051:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f66c45e24ec
            0x00007f66c45e2056:   cmp    %r10d,%ebp
            0x00007f66c45e2059:   jae    0x00007f66c45e23a4
   1.10%    0x00007f66c45e205f:   lea    (%r12,%rcx,8),%r10
            0x00007f66c45e2063:   mov    0x10(%r10,%rbp,4),%r8d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   3.85%    0x00007f66c45e2068:   mov    0xc(%r12,%r8,8),%eax         ; implicit exception: dispatches to 0x00007f66c45e2504
                                                                      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@1 (line 2363)
                                                                      ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                      ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   5.22%    0x00007f66c45e206d:   lea    (%r12,%r8,8),%r10            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f66c45e2071:   test   %eax,%eax
            0x00007f66c45e2073:   jne    0x00007f66c45e20d0           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@6 (line 2364)
....................................................................................................
  21.70%  <total for region 3>

....[Hottest Regions]...............................................................................
  35.71%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815
  25.82%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815
  21.70%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815
   8.24%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 838
   1.65%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815
   0.55%   [kernel.kallsyms]  vfs_write
   0.27%   [kernel.kallsyms]  native_write_msr
   0.27%   [kernel.kallsyms]  __rcu_read_unlock
   0.27%   [kernel.kallsyms]  __mem_cgroup_charge
   0.27%   [kernel.kallsyms]  pipe_write
   0.27%   [kernel.kallsyms]  inode_needs_update_time
   0.27%   [kernel.kallsyms]  _copy_from_iter
   0.27%                      <unknown>
   0.27%   [kernel.kallsyms]  llist_add_batch
   0.27%   [kernel.kallsyms]  xas_load
   0.27%   [kernel.kallsyms]  mutex_lock
   0.27%   [kernel.kallsyms]  entry_SYSCALL_64
   0.27%   [kernel.kallsyms]  asm_sysvec_call_function_single
   0.27%         c1, level 3  jdk.internal.misc.Blocker::begin, version 1, compile id 399
   0.27%         interpreter  method entry point (kind = zerolocals)
   2.20%  <...other 8 warm regions...>
....................................................................................................
  99.73%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  85.44%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 815
   8.24%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 838
   0.55%   [kernel.kallsyms]  vfs_write
   0.27%         c1, level 3  jdk.internal.misc.Blocker::begin, version 1, compile id 399
   0.27%   [kernel.kallsyms]  mutex_lock
   0.27%           libc.so.6  __memmove_evex_unaligned_erms
   0.27%           libc.so.6  _IO_fflush
   0.27%           libc.so.6  __GI___libc_write
   0.27%   [kernel.kallsyms]  __mem_cgroup_charge
   0.27%   [kernel.kallsyms]  entry_SYSCALL_64
   0.27%   [kernel.kallsyms]  asm_sysvec_call_function_single
   0.27%           libjvm.so  fileStream::write(char const*, unsigned long)
   0.27%   [kernel.kallsyms]  __rcu_read_unlock
   0.27%                      <unknown>
   0.27%           libjvm.so  ConstantPool::klass_at_impl(constantPoolHandle const&, int, JavaThread*)
   0.27%   [kernel.kallsyms]  _copy_from_iter
   0.27%   [kernel.kallsyms]  native_write_msr
   0.27%   [kernel.kallsyms]  llist_add_batch
   0.27%         interpreter  method entry point (kind = zerolocals)
   0.27%   [kernel.kallsyms]  pipe_write
   0.82%  <...other 3 warm methods...>
....................................................................................................
  99.73%  <totals>

....[Distribution by Source]........................................................................
  93.68%         c2, level 4
   3.57%   [kernel.kallsyms]
   1.10%           libc.so.6
   0.55%           libjvm.so
   0.27%
   0.27%         c1, level 3
   0.27%         interpreter
....................................................................................................
  99.73%  <totals>

WARNING: The perf event count is suspiciously low (364). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 203741 total address lines.
Perf output processed (skipped 6.276 seconds):
 Column 1: cycles (122 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820

             0x00007f94c85e4848:   mov    %eax,0xc(%r12,%r8,8)         ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@55 (line 2370)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e484d:   mov    %rbp,%r10                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::hashCode@58 (line 2373)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%     0x00007f94c85e4850:   mov    %eax,%r9d
             0x00007f94c85e4853:   sar    $0x1f,%r9d
             0x00007f94c85e4857:   mov    %eax,%ecx
             0x00007f94c85e4859:   xor    $0xc,%ecx
   0.82%     0x00007f94c85e485c:   movslq %eax,%r11
             0x00007f94c85e485f:   imul   $0x2aaaaaab,%r11,%r11
   1.64%     0x00007f94c85e4866:   sar    $0x21,%r11
   0.82%     0x00007f94c85e486a:   mov    %r11d,%ebx
   0.82%     0x00007f94c85e486d:   sub    %r9d,%ebx
             0x00007f94c85e4870:   lea    0x0(,%rbx,8),%r9d
             0x00007f94c85e4878:   lea    (%r9,%rbx,4),%ebx
             0x00007f94c85e487c:   mov    %eax,%r11d
             0x00007f94c85e487f:   sub    %ebx,%r11d                   ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Math::floorMod@2 (line 1583)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e4882:   test   %ecx,%ecx
          ╭  0x00007f94c85e4884:   jge    0x00007f94c85e4892           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@7 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%  │  0x00007f94c85e4886:   cmp    %ebx,%eax
          │  0x00007f94c85e4888:   je     0x00007f94c85e4b9c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Math::floorMod@11 (line 1585)
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
          │  0x00007f94c85e488e:   add    $0xc,%r11d                   ;*invokestatic floorMod {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1014)
          │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   2.46%  ↘  0x00007f94c85e4892:   cmp    $0xc,%r11d
             0x00007f94c85e4896:   jae    0x00007f94c85e4b3c
   2.46%     0x00007f94c85e489c:   movabs $0x45519fa20,%r9             ;   {oop(a &apos;java/lang/Object&apos;[12] {0x000000045519fa20})}
   1.64%     0x00007f94c85e48a6:   mov    0x10(%r9,%r11,4),%edi        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.ImmutableCollections$SetN::probe@18 (line 1016)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   3.28%     0x00007f94c85e48ab:   mov    0x8(%r12,%rdi,8),%ecx        ; implicit exception: dispatches to 0x00007f94c85e4ca4
   5.74%     0x00007f94c85e48b0:   cmp    %edi,%r8d
             0x00007f94c85e48b3:   je     0x00007f94c85e49c7           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@2 (line 1858)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%     0x00007f94c85e48b9:   cmp    $0xe8d8,%ecx                 ;   {metadata(&apos;java/lang/String&apos;)}
             0x00007f94c85e48bf:   jne    0x00007f94c85e4c22           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%     0x00007f94c85e48c5:   movsbl 0x10(%r12,%r8,8),%r9d        ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@26 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48cb:   lea    (%r12,%rdi,8),%rcx           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@8 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48cf:   movsbl 0x10(%rcx),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@30 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%     0x00007f94c85e48d3:   cmp    %edi,%r9d
             0x00007f94c85e48d6:   jne    0x00007f94c85e4b74           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@33 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48dc:   mov    0x14(%rcx),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48df:   mov    0x14(%r12,%r8,8),%ebx        ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48e4:   mov    0xc(%r12,%rsi,8),%ecx
   3.28%     0x00007f94c85e48e9:   mov    0xc(%r12,%rbx,8),%edx        ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48ee:   lea    (%r12,%rbx,8),%rbp           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@37 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e48f2:   lea    0x10(%r12,%rbx,8),%r13
             0x00007f94c85e48f7:   cmp    %ecx,%edx
             0x00007f94c85e48f9:   jne    0x00007f94c85e49eb           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@44 (line 1863)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.64%     0x00007f94c85e48ff:   lea    (%r12,%rsi,8),%rcx           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@41 (line 1861)
                                                                       ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                       ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
             0x00007f94c85e4903:   lea    0x10(%r12,%rsi,8),%rsi
             0x00007f94c85e4908:   mov    %r13,%rdi
....................................................................................................
  28.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820

          [Verified Entry Point]
            0x00007f94c85e4780:   mov    %eax,-0x14000(%rsp)
            0x00007f94c85e4787:   push   %rbp
            0x00007f94c85e4788:   sub    $0x20,%rsp
            0x00007f94c85e478c:   cmpl   $0x1,0x20(%r15)
            0x00007f94c85e4794:   jne    0x00007f94c85e4cd6           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
            0x00007f94c85e479a:   mov    0x1c(%rsi),%r11d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   0.82%    0x00007f94c85e479e:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007f94c85e4c54
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   1.64%    0x00007f94c85e47a3:   mov    0x10(%rsi),%r8               ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f94c85e47a7:   movslq %r10d,%r9
   1.64%    0x00007f94c85e47aa:   dec    %r9
   0.82%    0x00007f94c85e47ad:   and    %r8,%r9
   2.46%    0x00007f94c85e47b0:   mov    %r9d,%r9d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   3.28%    0x00007f94c85e47b3:   cmp    %r10d,%r9d
            0x00007f94c85e47b6:   jae    0x00007f94c85e4b02
   0.82%    0x00007f94c85e47bc:   mov    0x18(%rsi),%ecx              ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   0.82%    0x00007f94c85e47bf:   lea    (%r12,%r11,8),%r10
            0x00007f94c85e47c3:   movsbl 0x10(%r10,%r9,1),%ebp        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   4.92%    0x00007f94c85e47c9:   add    $0x1,%r8
            0x00007f94c85e47cd:   mov    %r8,0x10(%rsi)               ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f94c85e47d1:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f94c85e4c6c
            0x00007f94c85e47d6:   cmp    %r10d,%ebp
            0x00007f94c85e47d9:   jae    0x00007f94c85e4b24
   1.64%    0x00007f94c85e47df:   lea    (%r12,%rcx,8),%r10
            0x00007f94c85e47e3:   mov    0x10(%r10,%rbp,4),%r8d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
   4.10%    0x00007f94c85e47e8:   mov    0xc(%r12,%r8,8),%eax         ; implicit exception: dispatches to 0x00007f94c85e4c84
                                                                      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@1 (line 2363)
                                                                      ; - java.util.ImmutableCollections$SetN::probe@1 (line 1014)
                                                                      ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   3.28%    0x00007f94c85e47ed:   lea    (%r12,%r8,8),%r10            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@4 (line 88)
            0x00007f94c85e47f1:   test   %eax,%eax
            0x00007f94c85e47f3:   jne    0x00007f94c85e4850           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@6 (line 2364)
....................................................................................................
  26.23%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820

                        0x00007f94c85e4947:   add    $0x20,%rcx
                        0x00007f94c85e494b:   jne    0x00007f94c85e492e
                        0x00007f94c85e494d:   test   %eax,%eax
          ╭             0x00007f94c85e494f:   je     0x00007f94c85e49b2
          │             0x00007f94c85e4955:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007f94c85e495b:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007f94c85e4961:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007f94c85e4965:   vptest %ymm0,%ymm0
          │╭            0x00007f94c85e496a:   jne    0x00007f94c85e49b9
          ││╭           0x00007f94c85e496c:   jmp    0x00007f94c85e49b2
   3.28%  │││           0x00007f94c85e496e:   mov    %eax,%ecx
          │││           0x00007f94c85e4970:   and    $0xfffffffc,%ecx
          │││╭          0x00007f94c85e4973:   je     0x00007f94c85e498e
          ││││          0x00007f94c85e4975:   lea    (%rdi,%rcx,1),%rdi
          ││││          0x00007f94c85e4979:   lea    (%rsi,%rcx,1),%rsi
   0.82%  ││││          0x00007f94c85e497d:   neg    %rcx
   2.46%  ││││ ↗        0x00007f94c85e4980:   mov    (%rdi,%rcx,1),%ebx
   2.46%  ││││ │        0x00007f94c85e4983:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007f94c85e4986:   jne    0x00007f94c85e49b9
   1.64%  ││││││        0x00007f94c85e4988:   add    $0x4,%rcx
          │││││╰        0x00007f94c85e498c:   jne    0x00007f94c85e4980
          │││↘│         0x00007f94c85e498e:   test   $0x2,%al
          │││ │ ╭       0x00007f94c85e4990:   je     0x00007f94c85e49a4
          │││ │ │       0x00007f94c85e4992:   movzwl (%rdi),%ebx
          │││ │ │       0x00007f94c85e4995:   movzwl (%rsi),%ecx
          │││ │ │       0x00007f94c85e4998:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007f94c85e499a:   jne    0x00007f94c85e49b9
   0.82%  │││ │ ││      0x00007f94c85e499c:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007f94c85e49a0:   lea    0x2(%rsi),%rsi
   0.82%  │││ │ ↘│      0x00007f94c85e49a4:   test   $0x1,%al
          │││ │  │╭     0x00007f94c85e49a6:   je     0x00007f94c85e49b2
   0.82%  │││ │  ││     0x00007f94c85e49a8:   movzbl (%rdi),%ebx
          │││ │  ││     0x00007f94c85e49ab:   movzbl (%rsi),%ecx
          │││ │  ││     0x00007f94c85e49ae:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007f94c85e49b0:   jne    0x00007f94c85e49b9
          ↘│↘ │  │↘│    0x00007f94c85e49b2:   mov    $0x1,%eax
           │  │  │ │╭   0x00007f94c85e49b7:   jmp    0x00007f94c85e49bb           ;   {no_reloc}
   4.92%   ↘  ↘  ↘ ↘│   0x00007f94c85e49b9:   xor    %eax,%eax
                    ↘   0x00007f94c85e49bb:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007f94c85e49bf:   vpxor  %ymm1,%ymm1,%ymm1            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@44 (line 1863)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f94c85e49c3:   test   %eax,%eax
                     ╭  0x00007f94c85e49c5:   je     0x00007f94c85e49eb           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                     │                                                            ; - java.util.ImmutableCollections$SetN::probe@34 (line 1019)
                     │                                                            ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                     │  0x00007f94c85e49c7:   test   %r11d,%r11d
                     │  0x00007f94c85e49ca:   jl     0x00007f94c85e4b5c           ;*synchronization entry
                     │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@-1 (line 88)
   0.82%             │  0x00007f94c85e49d0:   mov    $0x1,%eax
                     │  0x00007f94c85e49d5:   vzeroupper
                     │  0x00007f94c85e49d8:   add    $0x20,%rsp
                     │  0x00007f94c85e49dc:   pop    %rbp
   1.64%             │  0x00007f94c85e49dd:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007f94c85e49e4:   ja     0x00007f94c85e4cc0
   0.82%             │  0x00007f94c85e49ea:   ret
                     ↘  0x00007f94c85e49eb:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@39 (line 1021)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   1.64%                0x00007f94c85e49ee:   cmp    $0xc,%r11d
                        0x00007f94c85e49f2:   jne    0x00007f94c85e4bfa           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
   0.82%                0x00007f94c85e49f8:   mov    0x458(%r15),%r11             ; ImmutableOopMap {r10=Oop r8=NarrowOop rbp=Oop r13=Derived_oop_rbp }
                                                                                  ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                  ; - (reexecute) java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f94c85e49ff:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@53 (line 1024)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                                                                                  ;   {poll}
   0.82%                0x00007f94c85e4a02:   cmp    $0x8aa33f2f,%r8d             ;   {oop(&quot;:scheme&quot;{0x000000045519f978})}
                        0x00007f94c85e4a09:   jne    0x00007f94c85e4a10           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - java.lang.String::equals@2 (line 1858)
                                                                                  ; - java.util.ImmutableCollections$SetN::probe@31 (line 1019)
                                                                                  ; - java.util.ImmutableCollections$SetN::contains@14 (line 945)
                                                                                  ; - org.jmhplayground.jmh6.BranchPrediction::immutableSet@7 (line 88)
                        0x00007f94c85e4a0b:   xor    %r11d,%r11d
....................................................................................................
  24.59%  <total for region 3>

....[Hottest Regions]...............................................................................
  28.69%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
  26.23%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
  24.59%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
   7.38%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 843
   2.46%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
   1.64%   [kernel.kallsyms]  native_write_msr
   1.64%   [kernel.kallsyms]  entry_SYSCALL_64
   0.82%   [kernel.kallsyms]  __rcu_read_lock
   0.82%   [kernel.kallsyms]  fput
   0.82%   [kernel.kallsyms]  pipe_write
   0.82%   [kernel.kallsyms]  _copy_from_iter
   0.82%   [kernel.kallsyms]  mutex_unlock
   0.82%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
   0.82%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.82%           libjvm.so  fileStream::write(char const*, unsigned long)
....................................................................................................
  99.18%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  82.79%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::immutableSet, version 2, compile id 820
   7.38%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_immutableSet_jmhTest::immutableSet_avgt_jmhStub, version 6, compile id 843
   1.64%   [kernel.kallsyms]  native_write_msr
   1.64%   [kernel.kallsyms]  entry_SYSCALL_64
   0.82%   [kernel.kallsyms]  _copy_from_iter
   0.82%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.82%   [kernel.kallsyms]  __rcu_read_lock
   0.82%   [kernel.kallsyms]  pipe_write
   0.82%           libjvm.so  fileStream::write(char const*, unsigned long)
   0.82%   [kernel.kallsyms]  fput
   0.82%   [kernel.kallsyms]  mutex_unlock
....................................................................................................
  99.18%  <totals>

....[Distribution by Source]........................................................................
  90.16%         c2, level 4
   7.38%   [kernel.kallsyms]
   1.64%           libjvm.so
....................................................................................................
  99.18%  <totals>

WARNING: The perf event count is suspiciously low (122). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:branch-misses":
  0.857 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:branches":
  29.438 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:cycles":
  72.091 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-loads":
  32.549 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:dTLB-stores":
  4.658 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:iTLB-load-misses":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.immutableSet:instructions":
  137.203 #/op


# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.stringSwitch
# Parameters: (same = false, shuffle = false)

# Run progress: 66.67% complete, ETA 00:00:38
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.564 ns/op
# Warmup Iteration   2: 5.995 ns/op
# Warmup Iteration   3: 6.190 ns/op
# Warmup Iteration   4: 5.910 ns/op
# Warmup Iteration   5: 5.819 ns/op
# Warmup Iteration   6: 5.805 ns/op
# Warmup Iteration   7: 5.798 ns/op
# Warmup Iteration   8: 5.825 ns/op
# Warmup Iteration   9: 5.840 ns/op
# Warmup Iteration  10: 5.847 ns/op
Iteration   1: 5.829 ns/op
Iteration   2: 5.829 ns/op
Iteration   3: 5.810 ns/op
Iteration   4: 5.829 ns/op
Iteration   5: 5.825 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 75.00% complete, ETA 00:00:28
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.547 ns/op
# Warmup Iteration   2: 6.066 ns/op
# Warmup Iteration   3: 6.693 ns/op
# Warmup Iteration   4: 6.365 ns/op
# Warmup Iteration   5: 6.224 ns/op
# Warmup Iteration   6: 6.094 ns/op
# Warmup Iteration   7: 6.119 ns/op
# Warmup Iteration   8: 6.263 ns/op
# Warmup Iteration   9: 6.109 ns/op
# Warmup Iteration  10: 6.101 ns/op
Iteration   1: 6.091 ns/op
Iteration   2: 6.090 ns/op
Iteration   3: 6.075 ns/op
Iteration   4: 6.088 ns/op
Iteration   5: 6.083 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch":
  5.955 ±(99.9%) 0.208 ns/op [Average]
  (min, avg, max) = (5.810, 5.955, 6.091), stdev = 0.138
  CI (99.9%): [5.747, 6.163] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:CPI":
  0.224 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:IPC":
  4.464 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-load-misses":
  0.026 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-loads":
  34.069 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-stores":
  8.148 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-icache-load-misses":
  0.016 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-loads":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-store-misses":
  ≈ 10⁻⁵ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-stores":
  0.001 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:asm":
PrintAssembly processed: 199172 total address lines.
Perf output processed (skipped 6.203 seconds):
 Column 1: cycles (270 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, java.lang.String::equals, version 2, compile id 383

                       0x00007f7ca85be07b:   je     0x00007f7ca85be0de
                       0x00007f7ca85be081:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
                       0x00007f7ca85be087:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
                       0x00007f7ca85be08d:   vpxor  %ymm1,%ymm0,%ymm0
                       0x00007f7ca85be091:   vptest %ymm0,%ymm0
          ╭            0x00007f7ca85be096:   jne    0x00007f7ca85be0e5
          │╭           0x00007f7ca85be098:   jmp    0x00007f7ca85be0de
          ││           0x00007f7ca85be09a:   mov    %eax,%ecx
          ││           0x00007f7ca85be09c:   and    $0xfffffffc,%ecx
          ││╭          0x00007f7ca85be09f:   je     0x00007f7ca85be0ba
   1.85%  │││          0x00007f7ca85be0a1:   lea    (%rdi,%rcx,1),%rdi
   1.85%  │││          0x00007f7ca85be0a5:   lea    (%rsi,%rcx,1),%rsi
          │││          0x00007f7ca85be0a9:   neg    %rcx
   0.37%  │││ ↗        0x00007f7ca85be0ac:   mov    (%rdi,%rcx,1),%ebx
  21.85%  │││ │        0x00007f7ca85be0af:   cmp    (%rsi,%rcx,1),%ebx
          │││╭│        0x00007f7ca85be0b2:   jne    0x00007f7ca85be0e5
   3.70%  │││││        0x00007f7ca85be0b4:   add    $0x4,%rcx
          ││││╰        0x00007f7ca85be0b8:   jne    0x00007f7ca85be0ac
          ││↘│         0x00007f7ca85be0ba:   test   $0x2,%al
          ││ │ ╭       0x00007f7ca85be0bc:   je     0x00007f7ca85be0d0
          ││ │ │       0x00007f7ca85be0be:   movzwl (%rdi),%ebx
          ││ │ │       0x00007f7ca85be0c1:   movzwl (%rsi),%ecx
   0.74%  ││ │ │       0x00007f7ca85be0c4:   cmp    %ecx,%ebx
          ││ │ │╭      0x00007f7ca85be0c6:   jne    0x00007f7ca85be0e5
   0.37%  ││ │ ││      0x00007f7ca85be0c8:   lea    0x2(%rdi),%rdi
          ││ │ ││      0x00007f7ca85be0cc:   lea    0x2(%rsi),%rsi
          ││ │ ↘│      0x00007f7ca85be0d0:   test   $0x1,%al
          ││ │  │╭     0x00007f7ca85be0d2:   je     0x00007f7ca85be0de
   1.11%  ││ │  ││     0x00007f7ca85be0d4:   movzbl (%rdi),%ebx
   1.11%  ││ │  ││     0x00007f7ca85be0d7:   movzbl (%rsi),%ecx
          ││ │  ││     0x00007f7ca85be0da:   cmp    %ecx,%ebx
          ││ │  ││╭    0x00007f7ca85be0dc:   jne    0x00007f7ca85be0e5
          │↘ │  │↘│    0x00007f7ca85be0de:   mov    $0x1,%eax
          │  │  │ │╭   0x00007f7ca85be0e3:   jmp    0x00007f7ca85be0e7
          ↘  ↘  ↘ ↘│   0x00007f7ca85be0e5:   xor    %eax,%eax
   0.74%           ↘   0x00007f7ca85be0e7:   vpxor  %ymm0,%ymm0,%ymm0
                       0x00007f7ca85be0eb:   vpxor  %ymm1,%ymm1,%ymm1            ;*synchronization entry
                                                                                 ; - java.lang.String::equals@-1 (line 1858)
                                                                                 ;   {no_reloc}
   0.74%            ↗  0x00007f7ca85be0ef:   vzeroupper
   2.59%            │  0x00007f7ca85be0f2:   add    $0x20,%rsp
                    │  0x00007f7ca85be0f6:   pop    %rbp
   1.11%            │  0x00007f7ca85be0f7:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                    │  0x00007f7ca85be0fe:   ja     0x00007f7ca85be15c
                    │  0x00007f7ca85be104:   ret
                    │  0x00007f7ca85be105:   xor    %eax,%eax
                    ╰  0x00007f7ca85be107:   jmp    0x00007f7ca85be0ef
                       0x00007f7ca85be109:   mov    $0xffffff45,%esi
                       0x00007f7ca85be10e:   mov    %r10d,(%rsp)
                       0x00007f7ca85be112:   xchg   %ax,%ax
                       0x00007f7ca85be114:   vzeroupper
                       0x00007f7ca85be117:   call   0x00007f7ca7eb6580           ; ImmutableOopMap {}
                                                                                 ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
....................................................................................................
  38.15%  <total for region 1>

....[Hottest Regions]...............................................................................
  38.15%         c2, level 4  java.lang.String::equals, version 2, compile id 383
   8.89%         c2, level 4  java.lang.String::equals, version 2, compile id 383
   8.89%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   7.04%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   5.19%         c2, level 4  java.lang.String::equals, version 2, compile id 383
   5.19%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   4.81%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   4.81%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 816
   2.22%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   1.85%         c2, level 4  java.lang.String::equals, version 2, compile id 383
   1.48%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   1.11%   [kernel.kallsyms]  native_write_msr
   0.74%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.74%   [kernel.kallsyms]  mutex_unlock
   0.74%   [kernel.kallsyms]  mutex_lock
   0.74%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   0.74%           libjvm.so  xmlStream::write_text(char const*, unsigned long) [clone .part.0]
   0.37%   [kernel.kallsyms]  __wake_up_sync_key
   0.37%   [kernel.kallsyms]  mutex_spin_on_owner
   0.37%   [kernel.kallsyms]  pipe_write
   4.81%  <...other 13 warm regions...>
....................................................................................................
  99.26%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  54.07%         c2, level 4  java.lang.String::equals, version 2, compile id 383
  30.74%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 795
   4.81%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 816
   1.11%   [kernel.kallsyms]  native_write_msr
   0.74%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.74%   [kernel.kallsyms]  mutex_lock
   0.74%   [kernel.kallsyms]  mutex_unlock
   0.74%           libjvm.so  xmlStream::write_text(char const*, unsigned long) [clone .part.0]
   0.37%   [kernel.kallsyms]  __wake_up_sync_key
   0.37%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.37%           libc.so.6  __mempcpy@plt
   0.37%   [kernel.kallsyms]  mutex_spin_on_owner
   0.37%           libjvm.so  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
   0.37%   [kernel.kallsyms]  entry_SYSCALL_64
   0.37%           libjvm.so  fileStream::write(char const*, unsigned long)
   0.37%           libjvm.so  update_register_map1(ImmutableOopMap const*, frame const*, RegisterMap*)
   0.37%   [kernel.kallsyms]  _copy_from_iter
   0.37%   [kernel.kallsyms]  clear_bhb_loop
   0.37%           libjvm.so  LinkResolver::check_method_loader_constraints(LinkInfo const&, methodHandle const&, char const*, JavaThread*)
   0.37%           libjvm.so  defaultStream::write(char const*, unsigned long)
   1.11%  <...other 3 warm methods...>
....................................................................................................
  99.26%  <totals>

....[Distribution by Source]........................................................................
  89.63%         c2, level 4
   5.93%   [kernel.kallsyms]
   2.96%           libjvm.so
   0.74%           libc.so.6
....................................................................................................
  99.26%  <totals>

WARNING: The perf event count is suspiciously low (270). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 201017 total address lines.
Perf output processed (skipped 6.269 seconds):
 Column 1: cycles (197 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, java.lang.String::equals, version 2, compile id 384

                        0x00007fceac5bdf73:   add    $0x20,%rcx
                        0x00007fceac5bdf77:   jne    0x00007fceac5bdf5a
                        0x00007fceac5bdf79:   test   %eax,%eax
          ╭             0x00007fceac5bdf7b:   je     0x00007fceac5bdfde
          │             0x00007fceac5bdf81:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007fceac5bdf87:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007fceac5bdf8d:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007fceac5bdf91:   vptest %ymm0,%ymm0
          │╭            0x00007fceac5bdf96:   jne    0x00007fceac5bdfe5
          ││╭           0x00007fceac5bdf98:   jmp    0x00007fceac5bdfde
   0.51%  │││           0x00007fceac5bdf9a:   mov    %eax,%ecx
          │││           0x00007fceac5bdf9c:   and    $0xfffffffc,%ecx
          │││╭          0x00007fceac5bdf9f:   je     0x00007fceac5bdfba
   2.54%  ││││          0x00007fceac5bdfa1:   lea    (%rdi,%rcx,1),%rdi
   2.54%  ││││          0x00007fceac5bdfa5:   lea    (%rsi,%rcx,1),%rsi
          ││││          0x00007fceac5bdfa9:   neg    %rcx
   0.51%  ││││ ↗        0x00007fceac5bdfac:   mov    (%rdi,%rcx,1),%ebx
  20.30%  ││││ │        0x00007fceac5bdfaf:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007fceac5bdfb2:   jne    0x00007fceac5bdfe5
   8.63%  ││││││        0x00007fceac5bdfb4:   add    $0x4,%rcx
          │││││╰        0x00007fceac5bdfb8:   jne    0x00007fceac5bdfac
          │││↘│         0x00007fceac5bdfba:   test   $0x2,%al
          │││ │ ╭       0x00007fceac5bdfbc:   je     0x00007fceac5bdfd0
   0.51%  │││ │ │       0x00007fceac5bdfbe:   movzwl (%rdi),%ebx
   0.51%  │││ │ │       0x00007fceac5bdfc1:   movzwl (%rsi),%ecx
   0.51%  │││ │ │       0x00007fceac5bdfc4:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007fceac5bdfc6:   jne    0x00007fceac5bdfe5
   0.51%  │││ │ ││      0x00007fceac5bdfc8:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007fceac5bdfcc:   lea    0x2(%rsi),%rsi
          │││ │ ↘│      0x00007fceac5bdfd0:   test   $0x1,%al
          │││ │  │╭     0x00007fceac5bdfd2:   je     0x00007fceac5bdfde
   2.03%  │││ │  ││     0x00007fceac5bdfd4:   movzbl (%rdi),%ebx
   0.51%  │││ │  ││     0x00007fceac5bdfd7:   movzbl (%rsi),%ecx
          │││ │  ││     0x00007fceac5bdfda:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007fceac5bdfdc:   jne    0x00007fceac5bdfe5
   0.51%  ↘│↘ │  │↘│    0x00007fceac5bdfde:   mov    $0x1,%eax
           │  │  │ │╭   0x00007fceac5bdfe3:   jmp    0x00007fceac5bdfe7
           ↘  ↘  ↘ ↘│   0x00007fceac5bdfe5:   xor    %eax,%eax
                    ↘   0x00007fceac5bdfe7:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007fceac5bdfeb:   vpxor  %ymm1,%ymm1,%ymm1            ;*synchronization entry
                                                                                  ; - java.lang.String::equals@-1 (line 1858)
                                                                                  ;   {no_reloc}
   0.51%             ↗  0x00007fceac5bdfef:   vzeroupper
   2.54%             │  0x00007fceac5bdff2:   add    $0x20,%rsp
                     │  0x00007fceac5bdff6:   pop    %rbp
   1.52%             │  0x00007fceac5bdff7:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007fceac5bdffe:   ja     0x00007fceac5be05c
                     │  0x00007fceac5be004:   ret
                     │  0x00007fceac5be005:   xor    %eax,%eax
                     ╰  0x00007fceac5be007:   jmp    0x00007fceac5bdfef
                        0x00007fceac5be009:   mov    $0xffffff45,%esi
                        0x00007fceac5be00e:   mov    %r10d,(%rsp)
                        0x00007fceac5be012:   xchg   %ax,%ax
                        0x00007fceac5be014:   vzeroupper
                        0x00007fceac5be017:   call   0x00007fceabeb6580           ; ImmutableOopMap {}
                                                                                  ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
....................................................................................................
  44.67%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, java.lang.String::equals, version 2, compile id 384

            0x00007fceac5bdeff:   movsbl 0x10(%rdx),%ebp              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@30 (line 1861)
            0x00007fceac5bdf03:   cmp    %ebp,%r10d
            0x00007fceac5bdf06:   jne    0x00007fceac5be009           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@33 (line 1861)
            0x00007fceac5bdf0c:   mov    0x14(%rdx),%r11d             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
            0x00007fceac5bdf10:   mov    0x14(%rsi),%r10d             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
            0x00007fceac5bdf14:   mov    0xc(%r12,%r11,8),%r9d
   3.55%    0x00007fceac5bdf19:   mov    0xc(%r12,%r10,8),%ecx
   4.06%    0x00007fceac5bdf1e:   cmp    %r9d,%ecx
            0x00007fceac5bdf21:   jne    0x00007fceac5be005           ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@44 (line 1863)
   0.51%    0x00007fceac5bdf27:   lea    (%r12,%r11,8),%r8            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@41 (line 1861)
            0x00007fceac5bdf2b:   lea    0x10(%r12,%r11,8),%rsi
            0x00007fceac5bdf30:   lea    (%r12,%r10,8),%r11           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::equals@37 (line 1861)
            0x00007fceac5bdf34:   lea    0x10(%r12,%r10,8),%rdi
   1.02%    0x00007fceac5bdf39:   test   %ecx,%ecx
            0x00007fceac5bdf3b:   je     0x00007fceac5bdfde
            0x00007fceac5bdf41:   mov    %ecx,%eax
   3.05%    0x00007fceac5bdf43:   and    $0x1f,%eax
            0x00007fceac5bdf46:   and    $0xffffffe0,%ecx
            0x00007fceac5bdf49:   je     0x00007fceac5bdf9a
            0x00007fceac5bdf4f:   lea    (%rdi,%rcx,1),%rdi
            0x00007fceac5bdf53:   lea    (%rsi,%rcx,1),%rsi
            0x00007fceac5bdf57:   neg    %rcx
            0x00007fceac5bdf5a:   vmovdqu (%rdi,%rcx,1),%ymm0
            0x00007fceac5bdf5f:   vmovdqu (%rsi,%rcx,1),%ymm1
            0x00007fceac5bdf64:   vpxor  %ymm1,%ymm0,%ymm0
            0x00007fceac5bdf68:   vptest %ymm0,%ymm0
            0x00007fceac5bdf6d:   jne    0x00007fceac5bdfe5
....................................................................................................
  12.18%  <total for region 2>

....[Hottest Regions]...............................................................................
  44.67%         c2, level 4  java.lang.String::equals, version 2, compile id 384
  12.18%         c2, level 4  java.lang.String::equals, version 2, compile id 384
   6.60%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   6.60%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 824
   5.08%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   4.57%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   4.06%         c2, level 4  java.lang.String::equals, version 2, compile id 384
   3.55%   [kernel.kallsyms]  native_write_msr
   3.05%         c2, level 4  java.lang.String::equals, version 2, compile id 384
   2.54%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   2.03%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   1.52%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   1.52%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   1.02%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.51%         interpreter  getstatic  178 getstatic
....................................................................................................
  99.49%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  63.96%         c2, level 4  java.lang.String::equals, version 2, compile id 384
  23.86%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 803
   6.60%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 824
   3.55%   [kernel.kallsyms]  native_write_msr
   1.02%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.51%         interpreter  getstatic  178 getstatic
....................................................................................................
  99.49%  <totals>

....[Distribution by Source]........................................................................
  94.42%         c2, level 4
   3.55%   [kernel.kallsyms]
   1.02%           libjvm.so
   0.51%         interpreter
....................................................................................................
  99.49%  <totals>

WARNING: The perf event count is suspiciously low (197). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:branch-misses":
  0.002 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:branches":
  31.341 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:cycles":
  28.224 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-load-misses":
  ≈ 10⁻⁵ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-loads":
  34.335 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-stores":
  8.197 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:iTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:instructions":
  125.995 #/op


# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-LTS-2513
# VM invoker: /home/fnigro/.sdkman/candidates/java/21-oracle/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 400 ms each
# Measurement: 5 iterations, 200 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.jmhplayground.jmh6.BranchPrediction.stringSwitch
# Parameters: (same = false, shuffle = true)

# Run progress: 83.33% complete, ETA 00:00:19
# Fork: 1 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 16.179 ns/op
# Warmup Iteration   2: 15.493 ns/op
# Warmup Iteration   3: 15.656 ns/op
# Warmup Iteration   4: 15.303 ns/op
# Warmup Iteration   5: 15.292 ns/op
# Warmup Iteration   6: 15.282 ns/op
# Warmup Iteration   7: 15.279 ns/op
# Warmup Iteration   8: 15.275 ns/op
# Warmup Iteration   9: 15.274 ns/op
# Warmup Iteration  10: 15.317 ns/op
Iteration   1: 15.311 ns/op
Iteration   2: 15.303 ns/op
Iteration   3: 15.276 ns/op
Iteration   4: 15.265 ns/op
Iteration   5: 15.976 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler

# Run progress: 91.67% complete, ETA 00:00:09
# Fork: 2 of 2
# Preparing profilers: LinuxPerfNormProfiler LinuxPerfAsmProfiler
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 17.024 ns/op
# Warmup Iteration   2: 16.381 ns/op
# Warmup Iteration   3: 16.468 ns/op
# Warmup Iteration   4: 16.144 ns/op
# Warmup Iteration   5: 16.129 ns/op
# Warmup Iteration   6: 16.130 ns/op
# Warmup Iteration   7: 16.129 ns/op
# Warmup Iteration   8: 16.154 ns/op
# Warmup Iteration   9: 16.148 ns/op
# Warmup Iteration  10: 16.222 ns/op
Iteration   1: 16.134 ns/op
Iteration   2: 16.050 ns/op
Iteration   3: 16.029 ns/op
Iteration   4: 16.047 ns/op
Iteration   5: 16.235 ns/op
# Processing profiler results: LinuxPerfAsmProfiler LinuxPerfNormProfiler


Result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch":
  15.763 ±(99.9%) 0.625 ns/op [Average]
  (min, avg, max) = (15.265, 15.763, 16.235), stdev = 0.414
  CI (99.9%): [15.137, 16.388] (assumes normal distribution)

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:CPI":
  0.601 clks/insn

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:IPC":
  1.664 insns/clk

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-load-misses":
  0.042 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-loads":
  34.593 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-dcache-stores":
  8.412 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:L1-icache-load-misses":
  0.039 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-load-misses":
  ≈ 10⁻³ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-loads":
  0.002 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:LLC-stores":
  0.003 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:asm":
PrintAssembly processed: 200537 total address lines.
Perf output processed (skipped 6.233 seconds):
 Column 1: cycles (134 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806

            # {method} {0x00007f666c479718} &apos;stringSwitch&apos; &apos;()Z&apos; in &apos;org/jmhplayground/jmh6/BranchPrediction&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f66f05e0720:   mov    0x8(%rsi),%r10d
            0x00007f66f05e0724:   movabs $0x7f6677000000,%r11
            0x00007f66f05e072e:   add    %r11,%r10
            0x00007f66f05e0731:   cmp    %r10,%rax
            0x00007f66f05e0734:   jne    0x00007f66efead280           ;   {runtime_call ic_miss_stub}
            0x00007f66f05e073a:   xchg   %ax,%ax
            0x00007f66f05e073c:   nopl   0x0(%rax)
          [Verified Entry Point]
   0.75%    0x00007f66f05e0740:   mov    %eax,-0x14000(%rsp)
            0x00007f66f05e0747:   push   %rbp
            0x00007f66f05e0748:   sub    $0x30,%rsp
            0x00007f66f05e074c:   cmpl   $0x0,0x20(%r15)
            0x00007f66f05e0754:   jne    0x00007f66f05e0ad9           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@-1 (line 101)
            0x00007f66f05e075a:   mov    0x1c(%rsi),%r10d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   0.75%    0x00007f66f05e075e:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f66f05e0a5c
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   1.49%    0x00007f66f05e0763:   mov    0x10(%rsi),%r11              ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007f66f05e0767:   movslq %r8d,%r9
            0x00007f66f05e076a:   dec    %r9
   2.24%    0x00007f66f05e076d:   and    %r11,%r9
            0x00007f66f05e0770:   mov    %r9d,%ecx                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007f66f05e0773:   cmp    %r8d,%ecx
            0x00007f66f05e0776:   jae    0x00007f66f05e09c3
   2.24%    0x00007f66f05e077c:   mov    0x18(%rsi),%r9d              ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007f66f05e0780:   shl    $0x3,%r10
            0x00007f66f05e0784:   movsbl 0x10(%r10,%rcx,1),%ebp       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   3.73%    0x00007f66f05e078a:   add    $0x1,%r11
            0x00007f66f05e078e:   mov    %r11,0x10(%rsi)              ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007f66f05e0792:   mov    0xc(%r12,%r9,8),%r11d        ; implicit exception: dispatches to 0x00007f66f05e0a70
            0x00007f66f05e0797:   cmp    %r11d,%ebp
            0x00007f66f05e079a:   jae    0x00007f66f05e09e0
   1.49%    0x00007f66f05e07a0:   lea    (%r12,%r9,8),%r10
            0x00007f66f05e07a4:   mov    0x10(%r10,%rbp,4),%r11d      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   5.22%    0x00007f66f05e07a9:   mov    %r11d,0x8(%rsp)
            0x00007f66f05e07ae:   mov    0xc(%r12,%r11,8),%eax        ; implicit exception: dispatches to 0x00007f66f05e0a84
                                                                      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@1 (line 2363)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
   2.24%    0x00007f66f05e07b3:   lea    (%r12,%r11,8),%r8            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007f66f05e07b7:   test   %eax,%eax
            0x00007f66f05e07b9:   jne    0x00007f66f05e082a           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@6 (line 2364)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
            0x00007f66f05e07bb:   movzbl 0x11(%r12,%r11,8),%r10d
....................................................................................................
  20.15%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, java.lang.String::equals, version 2, compile id 385

                        0x00007f66f05be073:   add    $0x20,%rcx
                        0x00007f66f05be077:   jne    0x00007f66f05be05a
                        0x00007f66f05be079:   test   %eax,%eax
          ╭             0x00007f66f05be07b:   je     0x00007f66f05be0de
          │             0x00007f66f05be081:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │             0x00007f66f05be087:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │             0x00007f66f05be08d:   vpxor  %ymm1,%ymm0,%ymm0
          │             0x00007f66f05be091:   vptest %ymm0,%ymm0
          │╭            0x00007f66f05be096:   jne    0x00007f66f05be0e5
          ││╭           0x00007f66f05be098:   jmp    0x00007f66f05be0de
   1.49%  │││           0x00007f66f05be09a:   mov    %eax,%ecx
          │││           0x00007f66f05be09c:   and    $0xfffffffc,%ecx
          │││╭          0x00007f66f05be09f:   je     0x00007f66f05be0ba
   2.24%  ││││          0x00007f66f05be0a1:   lea    (%rdi,%rcx,1),%rdi
   0.75%  ││││          0x00007f66f05be0a5:   lea    (%rsi,%rcx,1),%rsi
          ││││          0x00007f66f05be0a9:   neg    %rcx
          ││││ ↗        0x00007f66f05be0ac:   mov    (%rdi,%rcx,1),%ebx
   3.73%  ││││ │        0x00007f66f05be0af:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│        0x00007f66f05be0b2:   jne    0x00007f66f05be0e5
   1.49%  ││││││        0x00007f66f05be0b4:   add    $0x4,%rcx
          │││││╰        0x00007f66f05be0b8:   jne    0x00007f66f05be0ac
          │││↘│         0x00007f66f05be0ba:   test   $0x2,%al
          │││ │ ╭       0x00007f66f05be0bc:   je     0x00007f66f05be0d0
          │││ │ │       0x00007f66f05be0be:   movzwl (%rdi),%ebx
          │││ │ │       0x00007f66f05be0c1:   movzwl (%rsi),%ecx
   0.75%  │││ │ │       0x00007f66f05be0c4:   cmp    %ecx,%ebx
          │││ │ │╭      0x00007f66f05be0c6:   jne    0x00007f66f05be0e5
          │││ │ ││      0x00007f66f05be0c8:   lea    0x2(%rdi),%rdi
          │││ │ ││      0x00007f66f05be0cc:   lea    0x2(%rsi),%rsi
          │││ │ ↘│      0x00007f66f05be0d0:   test   $0x1,%al
          │││ │  │╭     0x00007f66f05be0d2:   je     0x00007f66f05be0de
   0.75%  │││ │  ││     0x00007f66f05be0d4:   movzbl (%rdi),%ebx
          │││ │  ││     0x00007f66f05be0d7:   movzbl (%rsi),%ecx
          │││ │  ││     0x00007f66f05be0da:   cmp    %ecx,%ebx
          │││ │  ││╭    0x00007f66f05be0dc:   jne    0x00007f66f05be0e5
          ↘│↘ │  │↘│    0x00007f66f05be0de:   mov    $0x1,%eax
           │  │  │ │╭   0x00007f66f05be0e3:   jmp    0x00007f66f05be0e7
           ↘  ↘  ↘ ↘│   0x00007f66f05be0e5:   xor    %eax,%eax
                    ↘   0x00007f66f05be0e7:   vpxor  %ymm0,%ymm0,%ymm0
                        0x00007f66f05be0eb:   vpxor  %ymm1,%ymm1,%ymm1            ;*synchronization entry
                                                                                  ; - java.lang.String::equals@-1 (line 1858)
                                                                                  ;   {no_reloc}
                     ↗  0x00007f66f05be0ef:   vzeroupper
   1.49%             │  0x00007f66f05be0f2:   add    $0x20,%rsp
                     │  0x00007f66f05be0f6:   pop    %rbp
                     │  0x00007f66f05be0f7:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                     │  0x00007f66f05be0fe:   ja     0x00007f66f05be15c
                     │  0x00007f66f05be104:   ret
                     │  0x00007f66f05be105:   xor    %eax,%eax
                     ╰  0x00007f66f05be107:   jmp    0x00007f66f05be0ef
                        0x00007f66f05be109:   mov    $0xffffff45,%esi
                        0x00007f66f05be10e:   mov    %r10d,(%rsp)
                        0x00007f66f05be112:   xchg   %ax,%ax
                        0x00007f66f05be114:   vzeroupper
....................................................................................................
  12.69%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806

   3.73%     0x00007f66f05e082a:   cmp    $0xc6f73cac,%eax
          ╭  0x00007f66f05e082f:   je     0x00007f66f05e08a8
   1.49%  │  0x00007f66f05e0831:   cmp    $0xb097a849,%eax
          │  0x00007f66f05e0836:   je     0x00007f66f05e0914           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.String::hashCode@58 (line 2373)
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
          │  0x00007f66f05e083c:   cmp    $0x5c8bb4d2,%eax
          │  0x00007f66f05e0841:   je     0x00007f66f05e08dc
          │  0x00007f66f05e0847:   cmp    $0xbbef3d9b,%eax
          │  0x00007f66f05e084c:   je     0x00007f66f05e094c
   0.75%  │  0x00007f66f05e0852:   cmp    $0xc60aa25f,%eax
          │  0x00007f66f05e0857:   je     0x00007f66f05e0984
   2.99%  │  0x00007f66f05e085d:   cmp    $0x365b75f,%eax
          │  0x00007f66f05e0862:   jne    0x00007f66f05e09f8           ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@11 (line 101)
   2.99%  │  0x00007f66f05e0868:   movabs $0x45501f8a0,%rdx            ;   {oop(&quot;:path&quot;{0x000000045501f8a0})}
          │  0x00007f66f05e0872:   mov    %r8,%rsi
          │  0x00007f66f05e0875:   xchg   %ax,%ax
          │  0x00007f66f05e0877:   call   0x00007f66efead780           ; ImmutableOopMap {}
          │                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@71 (line 101)
          │                                                            ;   {optimized virtual_call}
          │  0x00007f66f05e087c:   nopl   0x100036c(%rax,%rax,1)       ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@71 (line 101)
          │                                                            ;   {other}
   0.75%  │  0x00007f66f05e0884:   test   %eax,%eax
          │  0x00007f66f05e0886:   je     0x00007f66f05e0a14           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@79 (line 101)
          │  0x00007f66f05e088c:   mov    $0x1,%eax
          │  0x00007f66f05e0891:   add    $0x30,%rsp
          │  0x00007f66f05e0895:   pop    %rbp
          │  0x00007f66f05e0896:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007f66f05e089d:   ja     0x00007f66f05e0ac3
   0.75%  │  0x00007f66f05e08a3:   ret
          │  0x00007f66f05e08a4:   mov    (%rsp),%r8                   ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@11 (line 101)
   2.24%  ↘  0x00007f66f05e08a8:   movabs $0x45501f938,%rdx            ;   {oop(&quot;:status&quot;{0x000000045501f938})}
   1.49%     0x00007f66f05e08b2:   mov    %r8,%rsi
             0x00007f66f05e08b5:   xchg   %ax,%ax
             0x00007f66f05e08b7:   call   0x00007f66efead780           ; ImmutableOopMap {}
                                                                       ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@113 (line 101)
                                                                       ;   {optimized virtual_call}
             0x00007f66f05e08bc:   nopl   0x20003ac(%rax,%rax,1)       ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@113 (line 101)
                                                                       ;   {other}
             0x00007f66f05e08c4:   test   %eax,%eax
             0x00007f66f05e08c6:   jne    0x00007f66f05e088c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  11.94%  <total for region 3>

....[Hottest Regions]...............................................................................
  20.15%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
  12.69%         c2, level 4  java.lang.String::equals, version 2, compile id 385
  11.94%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   8.21%         c2, level 4  java.lang.String::equals, version 2, compile id 385
   5.22%         c2, level 4  java.lang.String::equals, version 2, compile id 385
   5.22%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   5.22%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   5.22%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 828
   4.48%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   2.99%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   2.99%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
   2.24%   [kernel.kallsyms]  native_write_msr
   2.24%         c2, level 4  java.lang.String::equals, version 2, compile id 385
   0.75%   [kernel.kallsyms]  mutex_spin_on_owner
   0.75%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.75%   [kernel.kallsyms]  mutex_unlock
   0.75%   [kernel.kallsyms]  mutex_lock
   0.75%   [kernel.kallsyms]  entry_SYSCALL_64
   0.75%         interpreter  method entry point (kind = zerolocals)
   0.75%         interpreter  native method entry point (kind = native)
   5.22%  <...other 7 warm regions...>
....................................................................................................
  99.25%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  52.99%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 806
  28.36%         c2, level 4  java.lang.String::equals, version 2, compile id 385
   5.22%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 828
   2.24%   [kernel.kallsyms]  native_write_msr
   0.75%   [kernel.kallsyms]  syscall_exit_to_user_mode
   0.75%   [kernel.kallsyms]  mutex_lock
   0.75%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   0.75%         interpreter  native method entry point (kind = native)
   0.75%   [kernel.kallsyms]  mutex_spin_on_owner
   0.75%   [kernel.kallsyms]  entry_SYSCALL_64
   0.75%           libjvm.so  fileStream::write(char const*, unsigned long)
   0.75%   [kernel.kallsyms]  mutex_unlock
   0.75%      hsdis-amd64.so  print_insn
   0.75%         interpreter  nofast_aload_0  236 nofast_aload_0
   0.75%           libjvm.so  decode_env::print_hook_comments(unsigned char*, bool)
   0.75%         interpreter  method entry point (kind = zerolocals)
   0.75%           libjvm.so  MachNode::alignment_required() const
   0.75%           libjvm.so  CodeBuffer::CodeBuffer(CodeBlob*)
....................................................................................................
  99.25%  <totals>

....[Distribution by Source]........................................................................
  86.57%         c2, level 4
   5.97%   [kernel.kallsyms]
   3.73%           libjvm.so
   2.24%         interpreter
   0.75%      hsdis-amd64.so
....................................................................................................
  99.25%  <totals>

WARNING: The perf event count is suspiciously low (134). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.
PrintAssembly processed: 201263 total address lines.
Perf output processed (skipped 6.303 seconds):
 Column 1: cycles (124 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808

            # {method} {0x00007fc4d4479718} &apos;stringSwitch&apos; &apos;()Z&apos; in &apos;org/jmhplayground/jmh6/BranchPrediction&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007fc5585df6a0:   mov    0x8(%rsi),%r10d
            0x00007fc5585df6a4:   movabs $0x7fc4df000000,%r11
            0x00007fc5585df6ae:   add    %r11,%r10
            0x00007fc5585df6b1:   cmp    %r10,%rax
            0x00007fc5585df6b4:   jne    0x00007fc557ead280           ;   {runtime_call ic_miss_stub}
            0x00007fc5585df6ba:   xchg   %ax,%ax
            0x00007fc5585df6bc:   nopl   0x0(%rax)
          [Verified Entry Point]
   2.42%    0x00007fc5585df6c0:   mov    %eax,-0x14000(%rsp)
            0x00007fc5585df6c7:   push   %rbp
            0x00007fc5585df6c8:   sub    $0x30,%rsp
            0x00007fc5585df6cc:   cmpl   $0x1,0x20(%r15)
            0x00007fc5585df6d4:   jne    0x00007fc5585dfaa9           ;*synchronization entry
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@-1 (line 101)
            0x00007fc5585df6da:   mov    0x1c(%rsi),%r11d             ;*getfield inputsSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@1 (line 77)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   1.61%    0x00007fc5585df6de:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007fc5585dfa2c
                                                                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@10 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   4.84%    0x00007fc5585df6e3:   mov    0x10(%rsi),%r8               ;*getfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@6 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007fc5585df6e7:   movslq %r10d,%r9
   0.81%    0x00007fc5585df6ea:   dec    %r9
   2.42%    0x00007fc5585df6ed:   and    %r8,%r9
            0x00007fc5585df6f0:   mov    %r9d,%ecx                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@15 (line 78)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007fc5585df6f3:   cmp    %r10d,%ecx
            0x00007fc5585df6f6:   jae    0x00007fc5585df93f
            0x00007fc5585df6fc:   mov    0x18(%rsi),%ebx              ;*getfield inputs {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@32 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007fc5585df6ff:   lea    (%r12,%r11,8),%r10
            0x00007fc5585df703:   movsbl 0x10(%r10,%rcx,1),%ebp       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@19 (line 79)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   4.84%    0x00007fc5585df709:   add    $0x1,%r8
            0x00007fc5585df70d:   mov    %r8,0x10(%rsi)               ;*putfield nextSequence {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@28 (line 80)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007fc5585df711:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007fc5585dfa40
            0x00007fc5585df716:   cmp    %r10d,%ebp
            0x00007fc5585df719:   jae    0x00007fc5585df95c
   0.81%    0x00007fc5585df71f:   lea    (%r12,%rbx,8),%r10
            0x00007fc5585df723:   mov    0x10(%r10,%rbp,4),%r11d      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
   4.03%    0x00007fc5585df728:   mov    %r11d,0x8(%rsp)
   1.61%    0x00007fc5585df72d:   mov    0xc(%r12,%r11,8),%eax        ; implicit exception: dispatches to 0x00007fc5585dfa54
                                                                      ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@1 (line 2363)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
   4.03%    0x00007fc5585df732:   lea    (%r12,%r11,8),%r8            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::next@36 (line 81)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@1 (line 101)
            0x00007fc5585df736:   test   %eax,%eax
            0x00007fc5585df738:   jne    0x00007fc5585df796           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@6 (line 2364)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
            0x00007fc5585df73a:   movzbl 0x11(%r12,%r11,8),%r11d
....................................................................................................
  27.42%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, java.lang.String::equals, version 2, compile id 381

                       0x00007fc5585bddf3:   add    $0x20,%rcx
                       0x00007fc5585bddf7:   jne    0x00007fc5585bddda
                       0x00007fc5585bddf9:   test   %eax,%eax
          ╭            0x00007fc5585bddfb:   je     0x00007fc5585bde5e
          │            0x00007fc5585bde01:   vmovdqu -0x20(%rdi,%rax,1),%ymm0
          │            0x00007fc5585bde07:   vmovdqu -0x20(%rsi,%rax,1),%ymm1
          │            0x00007fc5585bde0d:   vpxor  %ymm1,%ymm0,%ymm0
          │            0x00007fc5585bde11:   vptest %ymm0,%ymm0
          │╭           0x00007fc5585bde16:   jne    0x00007fc5585bde65
          ││╭          0x00007fc5585bde18:   jmp    0x00007fc5585bde5e
   2.42%  │││          0x00007fc5585bde1a:   mov    %eax,%ecx
          │││          0x00007fc5585bde1c:   and    $0xfffffffc,%ecx
          │││╭         0x00007fc5585bde1f:   je     0x00007fc5585bde3a
   0.81%  ││││         0x00007fc5585bde21:   lea    (%rdi,%rcx,1),%rdi
   1.61%  ││││         0x00007fc5585bde25:   lea    (%rsi,%rcx,1),%rsi
          ││││         0x00007fc5585bde29:   neg    %rcx
          ││││ ↗       0x00007fc5585bde2c:   mov    (%rdi,%rcx,1),%ebx
   3.23%  ││││ │       0x00007fc5585bde2f:   cmp    (%rsi,%rcx,1),%ebx
          ││││╭│       0x00007fc5585bde32:   jne    0x00007fc5585bde65
   0.81%  ││││││       0x00007fc5585bde34:   add    $0x4,%rcx
          │││││╰       0x00007fc5585bde38:   jne    0x00007fc5585bde2c
          │││↘│        0x00007fc5585bde3a:   test   $0x2,%al
          │││ │ ╭      0x00007fc5585bde3c:   je     0x00007fc5585bde50
          │││ │ │      0x00007fc5585bde3e:   movzwl (%rdi),%ebx
          │││ │ │      0x00007fc5585bde41:   movzwl (%rsi),%ecx
   0.81%  │││ │ │      0x00007fc5585bde44:   cmp    %ecx,%ebx
          │││ │ │╭     0x00007fc5585bde46:   jne    0x00007fc5585bde65
          │││ │ ││     0x00007fc5585bde48:   lea    0x2(%rdi),%rdi
          │││ │ ││     0x00007fc5585bde4c:   lea    0x2(%rsi),%rsi
          │││ │ ↘│     0x00007fc5585bde50:   test   $0x1,%al
          │││ │  │╭    0x00007fc5585bde52:   je     0x00007fc5585bde5e
          │││ │  ││    0x00007fc5585bde54:   movzbl (%rdi),%ebx
   1.61%  │││ │  ││    0x00007fc5585bde57:   movzbl (%rsi),%ecx
          │││ │  ││    0x00007fc5585bde5a:   cmp    %ecx,%ebx
          │││ │  ││╭   0x00007fc5585bde5c:   jne    0x00007fc5585bde65
          ↘│↘ │  │↘│   0x00007fc5585bde5e:   mov    $0x1,%eax
           │  │  │ │╭  0x00007fc5585bde63:   jmp    0x00007fc5585bde67
           ↘  ↘  ↘ ↘│  0x00007fc5585bde65:   xor    %eax,%eax
                    ↘  0x00007fc5585bde67:   vpxor  %ymm0,%ymm0,%ymm0
                       0x00007fc5585bde6b:   vpxor  %ymm1,%ymm1,%ymm1            ;*synchronization entry
                                                                                 ; - java.lang.String::equals@-1 (line 1858)
                                                                                 ;   {no_reloc}
                       0x00007fc5585bde6f:   vzeroupper
....................................................................................................
  11.29%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808

            0x00007fc5585df782:   je     0x00007fc5585df9e0           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@42 (line 2367)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
            0x00007fc5585df788:   mov    0x8(%rsp),%r11d
            0x00007fc5585df78d:   mov    %eax,0xc(%r12,%r11,8)        ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@55 (line 2370)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
            0x00007fc5585df792:   mov    (%rsp),%r8                   ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.String::hashCode@58 (line 2373)
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@8 (line 101)
   6.45%    0x00007fc5585df796:   cmp    $0xc6f73cac,%eax
            0x00007fc5585df79b:   je     0x00007fc5585df904
            0x00007fc5585df7a1:   cmp    $0xc6f73cac,%eax
            0x00007fc5585df7a6:   jge    0x00007fc5585df878
   1.61%    0x00007fc5585df7ac:   cmp    $0xbbef3d9b,%eax
            0x00007fc5585df7b1:   jne    0x00007fc5585df7ec           ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@11 (line 101)
   1.61%    0x00007fc5585df7b3:   movabs $0x45501f8b0,%rdx            ;   {oop(&quot;:method&quot;{0x000000045501f8b0})}
   0.81%    0x00007fc5585df7bd:   mov    %r8,%rsi
            0x00007fc5585df7c0:   data16 xchg %ax,%ax
            0x00007fc5585df7c3:   call   0x00007fc5585bdd40           ; ImmutableOopMap {}
                                                                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@99 (line 101)
                                                                      ;   {optimized virtual_call}
   0.81%    0x00007fc5585df7c8:   nopl   0x1000338(%rax,%rax,1)       ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@99 (line 101)
                                                                      ;   {other}
            0x00007fc5585df7d0:   test   %eax,%eax
            0x00007fc5585df7d2:   jne    0x00007fc5585df8ec           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - org.jmhplayground.jmh6.BranchPrediction::stringSwitch@102 (line 101)
            0x00007fc5585df7d8:   mov    $0xffffff45,%esi
            0x00007fc5585df7dd:   mov    %eax,%ebp
....................................................................................................
  11.29%  <total for region 3>

....[Hottest Regions]...............................................................................
  27.42%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
  11.29%         c2, level 4  java.lang.String::equals, version 2, compile id 381
  11.29%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   8.87%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 833
   7.26%         c2, level 4  java.lang.String::equals, version 2, compile id 381
   7.26%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   6.45%         c2, level 4  java.lang.String::equals, version 2, compile id 381
   4.03%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   2.42%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   2.42%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   2.42%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   1.61%   [kernel.kallsyms]  native_write_msr
   0.81%   [kernel.kallsyms]  amd_clear_divider
   0.81%   [kernel.kallsyms]  mutex_lock
   0.81%         interpreter  method entry point (kind = zerolocals)
   0.81%         interpreter  invokevirtual  182 invokevirtual
   0.81%         interpreter  nofast_aload_0  236 nofast_aload_0
   0.81%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
   0.81%           libc.so.6  _dl_addr
   0.81%           libc.so.6  __memmove_evex_unaligned_erms
....................................................................................................
  99.19%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  55.65%         c2, level 4  org.jmhplayground.jmh6.BranchPrediction::stringSwitch, version 2, compile id 808
  25.00%         c2, level 4  java.lang.String::equals, version 2, compile id 381
   8.87%         c2, level 4  org.jmhplayground.jmh6.jmh_generated.BranchPrediction_stringSwitch_jmhTest::stringSwitch_avgt_jmhStub, version 6, compile id 833
   2.42%           libjvm.so  ElfSymbolTable::lookup(unsigned char*, int*, int*, int*, ElfFuncDescTable*)
   1.61%   [kernel.kallsyms]  native_write_msr
   0.81%         interpreter  invokevirtual  182 invokevirtual
   0.81%   [kernel.kallsyms]  mutex_lock
   0.81%           libc.so.6  _dl_addr
   0.81%         interpreter  nofast_aload_0  236 nofast_aload_0
   0.81%           libc.so.6  __memmove_evex_unaligned_erms
   0.81%         interpreter  method entry point (kind = zerolocals)
   0.81%   [kernel.kallsyms]  amd_clear_divider
....................................................................................................
  99.19%  <totals>

....[Distribution by Source]........................................................................
  89.52%         c2, level 4
   3.23%   [kernel.kallsyms]
   2.42%           libjvm.so
   2.42%         interpreter
   1.61%           libc.so.6
....................................................................................................
  99.19%  <totals>

WARNING: The perf event count is suspiciously low (124). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:branch-misses":
  0.981 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:branches":
  31.622 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:cycles":
  76.650 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-load-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-loads":
  34.562 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-store-misses":
  ≈ 10⁻⁴ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:dTLB-stores":
  8.395 #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:iTLB-load-misses":
  ≈ 10⁻³ #/op

Secondary result "org.jmhplayground.jmh6.BranchPrediction.stringSwitch:instructions":
  127.520 #/op


# Run complete. Total time: 00:01:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            (same)  (shuffle)  Mode  Cnt    Score   Error      Units
BranchPrediction.hashSet                              false      false  avgt   10    6.188 ± 0.459      ns/op
BranchPrediction.hashSet:CPI                          false      false  avgt    2    0.246          clks/insn
BranchPrediction.hashSet:IPC                          false      false  avgt    2    4.071          insns/clk
BranchPrediction.hashSet:L1-dcache-load-misses        false      false  avgt    2    0.022               #/op
BranchPrediction.hashSet:L1-dcache-loads              false      false  avgt    2   36.035               #/op
BranchPrediction.hashSet:L1-dcache-stores             false      false  avgt    2    4.149               #/op
BranchPrediction.hashSet:L1-icache-load-misses        false      false  avgt    2    0.013               #/op
BranchPrediction.hashSet:LLC-load-misses              false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:LLC-loads                    false      false  avgt    2    0.001               #/op
BranchPrediction.hashSet:LLC-store-misses             false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:LLC-stores                   false      false  avgt    2    0.001               #/op
BranchPrediction.hashSet:asm                          false      false  avgt           NaN                ---
BranchPrediction.hashSet:branch-misses                false      false  avgt    2    0.002               #/op
BranchPrediction.hashSet:branches                     false      false  avgt    2   26.488               #/op
BranchPrediction.hashSet:cycles                       false      false  avgt    2   30.178               #/op
BranchPrediction.hashSet:dTLB-load-misses             false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:dTLB-loads                   false      false  avgt    2   35.971               #/op
BranchPrediction.hashSet:dTLB-store-misses            false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:dTLB-stores                  false      false  avgt    2    4.156               #/op
BranchPrediction.hashSet:iTLB-load-misses             false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:instructions                 false      false  avgt    2  122.489               #/op
BranchPrediction.hashSet                              false       true  avgt   10   11.377 ± 0.247      ns/op
BranchPrediction.hashSet:CPI                          false       true  avgt    2    0.451          clks/insn
BranchPrediction.hashSet:IPC                          false       true  avgt    2    2.219          insns/clk
BranchPrediction.hashSet:L1-dcache-load-misses        false       true  avgt    2    0.029               #/op
BranchPrediction.hashSet:L1-dcache-loads              false       true  avgt    2   36.436               #/op
BranchPrediction.hashSet:L1-dcache-stores             false       true  avgt    2    4.393               #/op
BranchPrediction.hashSet:L1-icache-load-misses        false       true  avgt    2    0.036               #/op
BranchPrediction.hashSet:LLC-load-misses              false       true  avgt    2    0.001               #/op
BranchPrediction.hashSet:LLC-loads                    false       true  avgt    2    0.003               #/op
BranchPrediction.hashSet:LLC-store-misses             false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:LLC-stores                   false       true  avgt    2    0.003               #/op
BranchPrediction.hashSet:asm                          false       true  avgt           NaN                ---
BranchPrediction.hashSet:branch-misses                false       true  avgt    2    0.690               #/op
BranchPrediction.hashSet:branches                     false       true  avgt    2   26.833               #/op
BranchPrediction.hashSet:cycles                       false       true  avgt    2   55.770               #/op
BranchPrediction.hashSet:dTLB-load-misses             false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:dTLB-loads                   false       true  avgt    2   36.517               #/op
BranchPrediction.hashSet:dTLB-store-misses            false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.hashSet:dTLB-stores                  false       true  avgt    2    4.441               #/op
BranchPrediction.hashSet:iTLB-load-misses             false       true  avgt    2   ≈ 10⁻³               #/op
BranchPrediction.hashSet:instructions                 false       true  avgt    2  123.755               #/op
BranchPrediction.immutableSet                         false      false  avgt   10    6.508 ± 0.177      ns/op
BranchPrediction.immutableSet:CPI                     false      false  avgt    2    0.234          clks/insn
BranchPrediction.immutableSet:IPC                     false      false  avgt    2    4.267          insns/clk
BranchPrediction.immutableSet:L1-dcache-load-misses   false      false  avgt    2    0.020               #/op
BranchPrediction.immutableSet:L1-dcache-loads         false      false  avgt    2   31.701               #/op
BranchPrediction.immutableSet:L1-dcache-stores        false      false  avgt    2    4.154               #/op
BranchPrediction.immutableSet:L1-icache-load-misses   false      false  avgt    2    0.014               #/op
BranchPrediction.immutableSet:LLC-load-misses         false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:LLC-loads               false      false  avgt    2    0.001               #/op
BranchPrediction.immutableSet:LLC-store-misses        false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:LLC-stores              false      false  avgt    2    0.001               #/op
BranchPrediction.immutableSet:asm                     false      false  avgt           NaN                ---
BranchPrediction.immutableSet:branch-misses           false      false  avgt    2    0.001               #/op
BranchPrediction.immutableSet:branches                false      false  avgt    2   28.778               #/op
BranchPrediction.immutableSet:cycles                  false      false  avgt    2   31.464               #/op
BranchPrediction.immutableSet:dTLB-load-misses        false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:dTLB-loads              false      false  avgt    2   31.616               #/op
BranchPrediction.immutableSet:dTLB-store-misses       false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:dTLB-stores             false      false  avgt    2    4.153               #/op
BranchPrediction.immutableSet:iTLB-load-misses        false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:instructions            false      false  avgt    2  134.223               #/op
BranchPrediction.immutableSet                         false       true  avgt   10   14.743 ± 0.271      ns/op
BranchPrediction.immutableSet:CPI                     false       true  avgt    2    0.525          clks/insn
BranchPrediction.immutableSet:IPC                     false       true  avgt    2    1.903          insns/clk
BranchPrediction.immutableSet:L1-dcache-load-misses   false       true  avgt    2    0.041               #/op
BranchPrediction.immutableSet:L1-dcache-loads         false       true  avgt    2   32.424               #/op
BranchPrediction.immutableSet:L1-dcache-stores        false       true  avgt    2    4.549               #/op
BranchPrediction.immutableSet:L1-icache-load-misses   false       true  avgt    2    0.053               #/op
BranchPrediction.immutableSet:LLC-load-misses         false       true  avgt    2    0.001               #/op
BranchPrediction.immutableSet:LLC-loads               false       true  avgt    2    0.004               #/op
BranchPrediction.immutableSet:LLC-store-misses        false       true  avgt    2    0.001               #/op
BranchPrediction.immutableSet:LLC-stores              false       true  avgt    2    0.004               #/op
BranchPrediction.immutableSet:asm                     false       true  avgt           NaN                ---
BranchPrediction.immutableSet:branch-misses           false       true  avgt    2    0.857               #/op
BranchPrediction.immutableSet:branches                false       true  avgt    2   29.438               #/op
BranchPrediction.immutableSet:cycles                  false       true  avgt    2   72.091               #/op
BranchPrediction.immutableSet:dTLB-load-misses        false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:dTLB-loads              false       true  avgt    2   32.549               #/op
BranchPrediction.immutableSet:dTLB-store-misses       false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.immutableSet:dTLB-stores             false       true  avgt    2    4.658               #/op
BranchPrediction.immutableSet:iTLB-load-misses        false       true  avgt    2    0.001               #/op
BranchPrediction.immutableSet:instructions            false       true  avgt    2  137.203               #/op
BranchPrediction.stringSwitch                         false      false  avgt   10    5.955 ± 0.208      ns/op
BranchPrediction.stringSwitch:CPI                     false      false  avgt    2    0.224          clks/insn
BranchPrediction.stringSwitch:IPC                     false      false  avgt    2    4.464          insns/clk
BranchPrediction.stringSwitch:L1-dcache-load-misses   false      false  avgt    2    0.026               #/op
BranchPrediction.stringSwitch:L1-dcache-loads         false      false  avgt    2   34.069               #/op
BranchPrediction.stringSwitch:L1-dcache-stores        false      false  avgt    2    8.148               #/op
BranchPrediction.stringSwitch:L1-icache-load-misses   false      false  avgt    2    0.016               #/op
BranchPrediction.stringSwitch:LLC-load-misses         false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:LLC-loads               false      false  avgt    2    0.001               #/op
BranchPrediction.stringSwitch:LLC-store-misses        false      false  avgt    2   ≈ 10⁻⁵               #/op
BranchPrediction.stringSwitch:LLC-stores              false      false  avgt    2    0.001               #/op
BranchPrediction.stringSwitch:asm                     false      false  avgt           NaN                ---
BranchPrediction.stringSwitch:branch-misses           false      false  avgt    2    0.002               #/op
BranchPrediction.stringSwitch:branches                false      false  avgt    2   31.341               #/op
BranchPrediction.stringSwitch:cycles                  false      false  avgt    2   28.224               #/op
BranchPrediction.stringSwitch:dTLB-load-misses        false      false  avgt    2   ≈ 10⁻⁵               #/op
BranchPrediction.stringSwitch:dTLB-loads              false      false  avgt    2   34.335               #/op
BranchPrediction.stringSwitch:dTLB-store-misses       false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:dTLB-stores             false      false  avgt    2    8.197               #/op
BranchPrediction.stringSwitch:iTLB-load-misses        false      false  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:instructions            false      false  avgt    2  125.995               #/op
BranchPrediction.stringSwitch                         false       true  avgt   10   15.763 ± 0.625      ns/op
BranchPrediction.stringSwitch:CPI                     false       true  avgt    2    0.601          clks/insn
BranchPrediction.stringSwitch:IPC                     false       true  avgt    2    1.664          insns/clk
BranchPrediction.stringSwitch:L1-dcache-load-misses   false       true  avgt    2    0.042               #/op
BranchPrediction.stringSwitch:L1-dcache-loads         false       true  avgt    2   34.593               #/op
BranchPrediction.stringSwitch:L1-dcache-stores        false       true  avgt    2    8.412               #/op
BranchPrediction.stringSwitch:L1-icache-load-misses   false       true  avgt    2    0.039               #/op
BranchPrediction.stringSwitch:LLC-load-misses         false       true  avgt    2   ≈ 10⁻³               #/op
BranchPrediction.stringSwitch:LLC-loads               false       true  avgt    2    0.002               #/op
BranchPrediction.stringSwitch:LLC-store-misses        false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:LLC-stores              false       true  avgt    2    0.003               #/op
BranchPrediction.stringSwitch:asm                     false       true  avgt           NaN                ---
BranchPrediction.stringSwitch:branch-misses           false       true  avgt    2    0.981               #/op
BranchPrediction.stringSwitch:branches                false       true  avgt    2   31.622               #/op
BranchPrediction.stringSwitch:cycles                  false       true  avgt    2   76.650               #/op
BranchPrediction.stringSwitch:dTLB-load-misses        false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:dTLB-loads              false       true  avgt    2   34.562               #/op
BranchPrediction.stringSwitch:dTLB-store-misses       false       true  avgt    2   ≈ 10⁻⁴               #/op
BranchPrediction.stringSwitch:dTLB-stores             false       true  avgt    2    8.395               #/op
BranchPrediction.stringSwitch:iTLB-load-misses        false       true  avgt    2   ≈ 10⁻³               #/op
BranchPrediction.stringSwitch:instructions            false       true  avgt    2  127.520               #/op